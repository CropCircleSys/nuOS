#!/bin/sh
set -e; set -u; set -C

# nuOS 0.0.11.0b0.1 - bin/nu_ns_host - LICENSE: MOZ_PUB
#
# Copyright (c) 2008-2017 Chad Jacob Milios and Crop Circle Systems, Inc.
# All rights reserved.
#
# This Source Code Form is subject to the terms of the Mozilla Public License, v2.0.
# If a copy of the MPL was not distributed alongside this file, you can obtain one at
# http://mozilla.org/MPL/2.0/ . This software project is not affiliated with the Mozilla
# Foundation.
#
# Official updates and community support available at https://nuos.org .
# Other licensing options and professional services available at https://ccsys.com .

NUOS_VER=0.0.11.0b0.1

. "$(dirname "$(realpath "$0")")/../lib/nu_system.sh"

while getopts A:C:h:i:lt:v OPT; do case $OPT in
	A) ALTERNATE=$OPTARG;;
	C) CHROOTDIR=$OPTARG;;
	h) HOST_NAME=$OPTARG;;
	i) push PUB_IPS $OPTARG;;
	l) OPT_LITE=y;;
	t) SOFTWARE=$OPTARG; case $SOFTWARE in
		djb|knot) ;; *) exit 22; esac;;
	v) OPT_VERBOSE=y;;
esac; done; shift $(($OPTIND-1))
[ $# = 0 ]

. "$(dirname "$(realpath "$0")")/../lib/nu_common.sh"

nuos_init

: ${SOFTWARE:=knot}
if [ -z "${PUB_IPS-}" ]; then
	case $SOFTWARE in
		djb)
			for dir in `ls -d "${CHROOTDIR-}/var/service/tinydns-"*`; do
				push PUB_IPS ${dir##*-}
			done
		;;
		knot)
			PUB_IPS="`sed -n -E -e '/^@	A+\>/,/^[^@[:blank:]]/{/^(@	A+\>|	A+\>)/p;}' "${CHROOTDIR-}/usr/local/etc/knot/example${ALTERNATE:+_${ALTERNATE}}.com.zone" | cut -f 3 | xargs`"
		;;
	esac
fi

echo 'host name       -h HOST_NAME      ' $HOST_NAME
echo 'public ips      -i PUB_IPS        ' $PUB_IPS
echo -n 'lightweight     -l OPT_LITE        ' && [ -n "${OPT_LITE-}" ] && echo set || echo null
echo

maybe_yell

case $SOFTWARE in
	djb)
		for ip in $PUB_IPS; do
			(
				cd "${CHROOTDIR-}/var/service/tinydns-$ip/root"
				if [ -z "${OPT_LITE-}" ]; then
					for ip_ in $PUB_IPS; do
						./add-ns $HOST_NAME $ip_
					done
					./add-mx $HOST_NAME $ip
				fi
				./add-host $HOST_NAME $ip || ./add-alias $HOST_NAME $ip
				./add-alias www.$HOST_NAME $ip
				make
			)
		done
	;;
	knot)
		if [ ! -d "${CHROOTDIR-}/var/db/knot${ALTERNATE:+_${ALTERNATE}}" ]; then
			mkdir "${CHROOTDIR-}/var/db/knot${ALTERNATE:+_${ALTERNATE}}"
			chown knot:knot "${CHROOTDIR-}/var/db/knot${ALTERNATE:+_${ALTERNATE}}"
		fi
		new_serial=`date +%Y%m%d`01
		if [ -n "${OPT_LITE-}" ]; then
			[ ! -f "${CHROOTDIR-}/var/db/knot${ALTERNATE:+_${ALTERNATE}}/$HOST_NAME.zone" ]
			zone=$HOST_NAME
			while [ ! -f "${CHROOTDIR-}/var/db/knot${ALTERNATE:+_${ALTERNATE}}/$zone.zone" ]; do
				echo $zone | grep -q '\.'
				zone=${zone#*.}
			done
			host=${HOST_NAME%.$zone}
			old_serial=`sed -n -E -e '/\<serial[[:blank:]]*$/{s/^[[:blank:]]*([[:digit:]]+).*$/\1/;p;}' "${CHROOTDIR-}/var/db/knot${ALTERNATE:+_${ALTERNATE}}/$zone.zone"`
			if [ $old_serial -ge $new_serial ]; then
				new_serial=$(($old_serial + 1))
			fi
			sed -i '' -E -e "/\<serial[[:blank:]]*$/s/[[:digit:]]+/$new_serial/" "${CHROOTDIR-}/var/db/knot${ALTERNATE:+_${ALTERNATE}}/$zone.zone"
			echo >> "${CHROOTDIR-}/var/db/knot${ALTERNATE:+_${ALTERNATE}}/$zone.zone"
			i=1
			for ip in $PUB_IPS; do
				cat >> "${CHROOTDIR-}/var/db/knot${ALTERNATE:+_${ALTERNATE}}/$zone.zone" <<EOF
`[ $i -gt 1 ] || echo $host`	A	$ip
EOF
				i=$(($i + 1))
			done
		else
			[ 1 = `echo "$(sed -n -E -e '/^zone:/,${/^([[:blank:]]|$)/d;p;}' "${CHROOTDIR-}/usr/local/etc/knot/knot${ALTERNATE:+_${ALTERNATE}}.conf")" | wc -l | xargs` ]
			sed -E -e "s/\<example\\.com\>/$HOST_NAME/g;/\<serial[[:blank:]]*$/s/[[:digit:]]+/$new_serial/" "${CHROOTDIR-}/usr/local/etc/knot/example${ALTERNATE:+_${ALTERNATE}}.com.zone" > "${CHROOTDIR-}/var/db/knot${ALTERNATE:+_${ALTERNATE}}/$HOST_NAME.zone"
			echo "  - domain: $HOST_NAME" >> "${CHROOTDIR-}/usr/local/etc/knot/knot${ALTERNATE:+_${ALTERNATE}}.conf"
		fi
	;;
esac


echo "Configured host $HOST_NAME in name server."
