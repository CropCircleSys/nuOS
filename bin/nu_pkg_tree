#!/bin/sh
set -e; set -u; set -C

# nuOS 0.0.9.2d12 - bin/nu_pkg_tree - LICENSE: BSD_SMPL
#
# Copyright (c) 2008-2013 Chad Jacob Milios and Crop Circle Systems, Inc.
# All rights reserved.
#
# This Source Code Form is subject to the terms of the Simplified BSD License.
# If a copy of the Simplified BSD License was not distributed alongside this file, you can
# obtain one at http://www.freebsd.org/copyright/freebsd-license.html . This software
# project is not affiliated with the FreeBSD Project.
#
# Official updates and community support available at http://nuos.org .
# Other licensing options and professional services available at http://ccsys.com .

NUOS_VER=0.0.9.2d12

while getopts Dv OPT; do case $OPT in
	D) OPT_DEBUG=y;;
	v) OPT_VERBOSE=y;;
	*)
		echo "usage: `basename $0` [-Dv]" >&2
		exit 1
esac; shift; done

. "$(dirname "$(realpath "$0")")/../lib/nu_system.sh"
. "$(dirname "$(realpath "$0")")/../lib/nu_make.sh"
. "$(dirname "$(realpath "$0")")/../lib/nu_ports.sh"
. "$(dirname "$(realpath "$0")")/../lib/nu_collection.sh"
. "$(dirname "$(realpath "$0")")/../lib/nu_common.sh"

nuos_init -q
collection_vars_init

maybe_yell

require_tmp -d work_dir
main () {
	local depth=$((${depth--1}+1))
	local arg= is_port=
	for arg in $@; do
		if echo $arg | grep -q /; then
			is_port=y
		else
			is_port=
		fi
		if [ -n "$is_port" ]; then
			local arg_=`echo $arg | tr / _`
			if [ ! -d "$work_dir/$arg_/dependencies" ]; then
				local build_deps= run_deps= all_deps= buildonly_deps=
				port_deps build_deps run_deps $arg
				sets_union all_deps "$build_deps" "$run_deps"
				sets_sym_diff buildonly_deps "$all_deps" "$run_deps"
				mkdir -p "$work_dir/$arg_/dependencies"
				for dep_type in build run all buildonly; do
					eval local deps=\"\$${dep_type}_deps\"
					cat "$deps" > "$work_dir/$arg_/dependencies/$dep_type"
					for dep in `cat "$deps"`; do
						local dep_=`echo $dep | tr / _`
						mkdir -p "$work_dir/$arg_/dependants"
						echo $arg >> "$work_dir/$arg_/dependants/$dep_type"
					done
				done
				main `cat "$all_deps"`
				retire_tmp build_deps
				retire_tmp run_deps
				retire_tmp all_deps
				retire_tmp buildonly_deps
				echo $arg 1>&2
			fi
		else
			eval main "\$COLL_$arg"
			echo $arg 1>&2
		fi
	done
}
main ${@:-$HOSTOS_PKG_COLLECTION}
retire_tmp -k work_dir
