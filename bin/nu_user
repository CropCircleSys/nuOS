#!/bin/sh
set -e; set -u; set -C

# nuOS 0.0.11.2a1 - bin/nu_user
#
# Copyright (c) 2008-2018 Chad Jacob Milios and Crop Circle Systems.
# All rights reserved.
#
# This Source Code Form is subject to the terms of the Simplified BSD License.
# If a copy of the Simplified BSD License was not distributed alongside this file, you can
# obtain one at https://www.freebsd.org/copyright/freebsd-license.html . This software
# project is not affiliated with the FreeBSD Project.
#
# Official updates and community support available at https://nuos.org .
# Professional services available at https://ccsys.com .

NUOS_VER=0.0.11.2a1

while getopts aC:d:D:eh:im:Mn:p:Psu:v OPT; do case $OPT in
	a) OPT_SASL=y;;
	C) CHROOTDIR=$OPTARG;;
	d) DELIVER_MAIL=$OPTARG; case $DELIVER_MAIL in
		local|net) ;; *) exit 22; esac;;
	D) DELIVER_HOST=$OPTARG;;
	e) OPT_ELI=y;;
	h) HOST_NAME=$OPTARG;;
	i) OPT_IMPORT=y;;
	m) USER_PATH=$OPTARG;;
	M) OPT_NOMAIL=y;;
	n) USER_FULL_NAME=$OPTARG;;
	p) POOL_NAME=$OPTARG;;
	P) OPT_NO_PASSWD=y;;
	s) OPT_SAMBA=y;;
	u) USER_NAME=$OPTARG;;
	v) OPT_VERBOSE=y;;
esac; done; shift $(($OPTIND-1))
[ $# = 0 ]

. "$(dirname "$(realpath "$0")")/../lib/nu_system.sh"
. "$(dirname "$(realpath "$0")")/../lib/nu_common.sh"

nuos_init

if [ -n "${OPT_IMPORT-}" ]; then
	[ -z "${OPT_NO_PASSWD-}" -a -z "${USER_PATH-}" -a -z "${USER_FULL_NAME-}" -a -z "${USER_NAME-}" ]
else
	echo 'creating user   -u USER_NAME      ' $USER_NAME
	echo 'user full name  -n USER_FULL_NAME ' ${USER_FULL_NAME:=User $USER_NAME}
	echo 'pool name       -p POOL_NAME      ' ${POOL_NAME:=$POOL_BOOT_NAME}
	echo 'user path       -m USER_PATH      ' ${USER_PATH:=/home/$USER_NAME}
	echo -n 'samba access    -s OPT_SAMBA       ' && [ -n "${OPT_SAMBA-}" ] && echo set || echo null
	echo -n 'passwordless    -P OPT_NO_PASSWD   ' && [ -n "${OPT_NO_PASSWD-}" ] && echo set || echo null
	echo -n 'sasl account    -a OPT_SASL        ' && [ -n "${OPT_SASL-}" ] && echo set || echo null
	hostname=${NEW_HOST:-$HOST}
	: ${HOST_NAME:=$hostname}
	echo -n 'user domain     -h HOST_NAME       ' && [ -n "${OPT_SASL-}" -o -z "${OPT_NOMAIL-}" ] && echo $HOST_NAME || echo n/a
	echo -n 'no mail inbox   -M OPT_NOMAIL      ' && [ -n "${OPT_NOMAIL-}" ] && echo set || echo null
	echo 'mail delivery   -d DELIVER_MAIL   ' ${DELIVER_MAIL:=local}
	[ "${DELIVER_HOST:=localhost}" != $HOST_NAME ] || DELIVER_HOST=localhost
	echo -n 'mailbox host    -D DELIVER_HOST    ' && [ $DELIVER_MAIL = net ] && echo $DELIVER_HOST || echo n/a
fi

maybe_yell

if [ -n "${OPT_IMPORT-}" ]; then
	while read user passwd name; do
		[ -n "$user" -a -n "$passwd" ]
		sh $0 ${OPT_SASL:+-a} ${OPT_SAMBA:+-s} ${OPT_VERBOSE:+-v} ${HOST_NAME:+-h "$HOST_NAME"} ${POOL_NAME:+-p "$POOL_NAME"} -d $DELIVER_MAIL ${DELIVER_HOST:+-D "$DELIVER_HOST"} ${CHROOTDIR:+-C "$CHROOTDIR"} -n "${name:-User $user}" -u $user <<EOF
$passwd
EOF
		subproc_exit_status=$?
		if [ $subproc_exit_status -gt 0 ]; then
			exit $subproc_exit_status
		fi
	done
	exit 0
fi

if [ $DELIVER_MAIL = net ]; then
	if [ localhost = $DELIVER_HOST ]; then
		nexthop=lmtp:unix:/var/imap/socket/lmtp
	else
		nexthop=inet:$DELIVER_HOST
	fi
	cat >> "${CHROOTDIR-}/usr/local/etc/postfix/transport" <<EOF
$USER_NAME	$nexthop
EOF
	postmap "${CHROOTDIR-}/usr/local/etc/postfix/transport"
fi
if [ -z "${OPT_NOMAIL-}" ]; then
	cat >> "${CHROOTDIR-}/usr/local/etc/postfix/virtual" <<EOF
$USER_NAME@$HOST_NAME	$USER_NAME@localhost
EOF
	postmap "${CHROOTDIR-}/usr/local/etc/postfix/virtual"
	cat >> "${CHROOTDIR-}/usr/local/etc/postfix/senders" <<EOF
$USER_NAME@$HOST_NAME	$USER_NAME@$HOST_NAME
EOF
	postmap "${CHROOTDIR-}/usr/local/etc/postfix/senders"
fi

if [ -z "${OPT_NO_PASSWD-}" ]; then
	read -p 'user password:' -r password
	if [ -t 0 ]; then
		read -p 'repeat password:' -r password_repeat
		[ "$password" = "$password_repeat" ] || (echo "password entered incorrectly" >&2 && exit 85)
	fi
fi
dataset="$POOL_NAME`dirname "$USER_PATH"`"
if zfs list $dataset; then
	echo "Creating dataset $dataset/$USER_NAME for user home."
	zfs create $dataset/$USER_NAME
	zfs_created=y
else
	echo "No immediate parent dataset, not creating user home dataset."
fi

${CHROOTDIR:+chroot "$CHROOTDIR"} pw groupadd -n "$USER_NAME" ${GROUP_FLAGS-}
if [ -z "${OPT_NO_PASSWD-}" ]; then
	${CHROOTDIR:+chroot "$CHROOTDIR"} pw useradd -m -n $USER_NAME -g $USER_NAME -c "$USER_FULL_NAME" ${USER_FLAGS-} -h 0 <<EOF
$password
EOF
	if [ -n "${OPT_SAMBA-}" ]; then
		if [ ! -f "${CHROOTDIR-}/usr/local/etc/smb4.conf" ]; then
			cp -p "${CHROOTDIR-}/usr/local/etc/smb4.conf.sample" "${CHROOTDIR-}/usr/local/etc/smb4.conf" || touch "${CHROOTDIR-}/usr/local/etc/smb4.conf"
		fi
		if [ ! -d "${CHROOTDIR-}/usr/local/etc/samba" ]; then
			mkdir "${CHROOTDIR-}/usr/local/etc/samba"
		fi
		${CHROOTDIR:+chroot "$CHROOTDIR"} smbpasswd -s -a $USER_NAME <<EOF
$password
$password
EOF
	fi
	if [ -n "${OPT_SASL-}" ]; then
		${CHROOTDIR:+chroot "$CHROOTDIR"} saslpasswd2 -c -p -u $HOST_NAME $USER_NAME <<EOF
$password
EOF
	fi
else
	${CHROOTDIR:+chroot "$CHROOTDIR"} pw useradd -m -n $USER_NAME -g $USER_NAME -c "$USER_FULL_NAME" ${USER_FLAGS-}
fi

if [ -n "${OPT_ELI-}" ] && zfs list $POOL_NAME-pvt > /dev/null 2>&1; then
	uid=`stat -f %Du "${CHROOTDIR-}$USER_PATH"`
	echo "Creating dataset $POOL_NAME-pvt$USER_PATH for user private data."
	(umask 77 && mkdir "${CHROOTDIR-}$USER_PATH/private")
	chown $uid "${CHROOTDIR-}$USER_PATH/private"
	chflags schg "${CHROOTDIR-}$USER_PATH/private"
	zfs create -o mountpoint=none -o canmount=off $POOL_NAME-pvt/home 2> /dev/null || true
	pvt_mntpt=`realpath "${CHROOTDIR-}$USER_PATH/private"`
	pvt_mntpt=${pvt_mntpt#"${CHROOTDIR-}"}
	gid=`stat -f %Dg "${CHROOTDIR-}$USER_PATH/private"`
	zfs create -o "mountpoint=$pvt_mntpt" $POOL_NAME-pvt$USER_PATH
	chmod go-rx "${CHROOTDIR-}$USER_PATH/private"
	chown $uid:$gid "${CHROOTDIR-}$USER_PATH/private"
fi

zfs snapshot $dataset/$USER_NAME@genesis
echo "Account for user $USER_NAME created."
