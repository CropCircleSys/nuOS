#!/bin/sh
set -e; set -u; set -C

# nuOS 0.0.9.2b2 - bin/nu_user - LICENSE: MOZ_PUB
#
# Copyright (c) 2008-2014 Chad Jacob Milios and Crop Circle Systems, Inc.
# All rights reserved.
#
# This Source Code Form is subject to the terms of the Mozilla Public License, v2.0.
# If a copy of the MPL was not distributed alongside this file, you can obtain one at
# http://mozilla.org/MPL/2.0/ . This software project is not affiliated with the Mozilla
# Foundation.
#
# Official updates and community support available at http://nuos.org .
# Other licensing options and professional services available at http://ccsys.com .

NUOS_VER=0.0.9.2b2

while getopts aC:h:m:n:p:Psu:v OPT; do case $OPT in
	a) OPT_SASL=y;;
	C) CHROOTDIR=$OPTARG;;
	h) HOST_NAME=$OPTARG;;
	m) USER_PATH=$OPTARG;;
	n) USER_FULL_NAME=$OPTARG;;
	p) POOL_NAME=$OPTARG;;
	P) OPT_NO_PASSWD=y;;
	s) OPT_SAMBA=y;;
	u) USER_NAME=$OPTARG;;
	v) OPT_VERBOSE=y;;
esac; done; shift $(($OPTIND-1))
[ $# = 0 ]

. "$(dirname "$(realpath "$0")")/../lib/nu_system.sh"
. "$(dirname "$(realpath "$0")")/../lib/nu_common.sh"

nuos_init

echo 'creating user   -u USER_NAME      ' ${USER_NAME:=}
echo 'user full name  -n USER_FULL_NAME ' ${USER_FULL_NAME:=User $USER_NAME}
echo 'pool name       -p POOL_NAME      ' ${POOL_NAME:=$POOL_BOOT_NAME}
echo 'user path       -m USER_PATH      ' ${USER_PATH:=/home/$USER_NAME}
echo -n 'samba access    -s OPT_SAMBA       ' && [ -n "${OPT_SAMBA-}" ] && echo set || echo null
echo -n 'passwordless    -P OPT_NO_PASSWD   ' && [ -n "${OPT_NO_PASSWD-}" ] && echo set || echo null
echo -n 'sasl account    -a OPT_SASL        ' && [ -n "${OPT_SASL-}" ] && echo set || echo null
echo -n 'sasl domain     -h HOST_NAME       ' && [ -n "${OPT_SASL-}" ] && echo ${HOST_NAME:=$HOST} || echo n/a

maybe_yell

[ -n "$USER_NAME" ]

if [ -z "${OPT_NO_PASSWD-}" ]; then
	read -p 'user password:' -r password
	read -p 'repeat password:' -r password_repeat
	[ "$password" = "$password_repeat" ] || (echo "password entered incorrectly" >&2 && exit 85)
fi
dataset="$POOL_NAME`dirname "$USER_PATH"`"
if zfs list "$dataset"; then
	echo "Creating dataset $dataset/$USER_NAME for user home."
	zfs create $dataset/$USER_NAME
else
	echo "No immediate parent dataset, not creating user home dataset."
fi

${CHROOTDIR:+chroot "$CHROOTDIR"} pw groupadd -n "$USER_NAME" ${GROUP_FLAGS-}
if [ -z "${OPT_NO_PASSWD-}" ]; then
	${CHROOTDIR:+chroot "$CHROOTDIR"} pw useradd -m -n $USER_NAME -g $USER_NAME -c "$USER_FULL_NAME" ${USER_FLAGS-} -h 0 <<EOF
$password
EOF
	if [ -n "${OPT_SAMBA-}" ]; then
		${CHROOTDIR:+chroot "$CHROOTDIR"} smbpasswd -s -a $USER_NAME <<EOF
$password
$password
EOF
	fi
	if [ -n "${OPT_SASL-}" ]; then
		${CHROOTDIR:+chroot "$CHROOTDIR"} saslpasswd2 -c -p -u $HOST_NAME $USER_NAME <<EOF
$password
EOF
		if [ -f "${CHROOTDIR-}/usr/local/etc/postfix/virtual" ]; then
			cat >> "${CHROOTDIR-}/usr/local/etc/postfix/virtual" <<EOF
$USER_NAME@$HOST_NAME	$USER_NAME@$HOST_NAME
EOF
			postmap "${CHROOTDIR-}/usr/local/etc/postfix/virtual"
		fi
	fi
else
	${CHROOTDIR:+chroot "$CHROOTDIR"} pw useradd -m -n $USER_NAME -g $USER_NAME -c "$USER_FULL_NAME" ${USER_FLAGS-}
fi
zfs snapshot $dataset/$USER_NAME@genesis
echo "Account for user $USER_NAME created."
