#!/bin/sh
set -e; set -u; set -C

# nuOS 0.0.9.2b1 - bin/nu_user - LICENSE: MOZ_PUB
#
# Copyright (c) 2008-2013 Chad Jacob Milios and Crop Circle Systems, Inc.
# All rights reserved.
#
# This Source Code Form is subject to the terms of the Mozilla Public License, v2.0.
# If a copy of the MPL was not distributed alongside this file, you can obtain one at
# http://mozilla.org/MPL/2.0/ . This software project is not affiliated with the Mozilla
# Foundation.
#
# Official updates and community support available at http://nuos.org .
# Other licensing options and professional services available at http://ccsys.com .

NUOS_VER=0.0.9.2b1

while getopts C:m:u:n:p:Psv OPT; do
	case $OPT in
		C)
			CHROOTDIR="$OPTARG"
			;;
		m)
			USER_PATH="$OPTARG"
			;;
		u)
			USER_NAME="$OPTARG"
			;;
		n)
			USER_FULL_NAME="$OPTARG"
			;;
		p)
			POOL_NAME="$OPTARG"
			;;
		P)
			OPT_NO_PASSWD=y
			;;
		s)
			OPT_SAMBA=y
			;;
		v)
			OPT_VERBOSE=y
			;;
		*)
			echo "usage: `basename \"$0\"` [-Pv] [-C chroot-dir] -u acct-name [-n user-full-name] [-p pool-name]" >&2
			exit 1
	esac
done

. "$(dirname "$(realpath "$0")")/../lib/nu_system.sh"
. "$(dirname "$(realpath "$0")")/../lib/nu_common.sh"

nuos_init

echo 'creating user   -u USER_NAME      ' ${USER_NAME:=}
echo 'user full name  -n USER_FULL_NAME ' ${USER_FULL_NAME:=User $USER_NAME}
echo 'pool name       -p POOL_NAME      ' ${POOL_NAME:=$POOL_BOOT_NAME}
echo 'user path       -m USER_PATH      ' ${USER_PATH:=/home/$USER_NAME}
echo -n 'samba access    -s OPT_SAMBA       ' && [ -n "${OPT_SAMBA-}" ] && echo set || echo null
echo -n 'passwordless    -P OPT_NO_PASSWD   ' && [ -n "${OPT_NO_PASSWD-}" ] && echo set || echo null

maybe_yell

# key_install () {
# 	local acct="$1" keys="$2"
# 	for key in $keys; do
# 		key="${key%.pub}.pub"
# 		key=`eval echo $key`
# 		if [ -f $key ]; then
# 			local home=
# 			echo "WARNING: authorizing key $key to connect as user $acct" >&2
# 			: ${home:=`chroot "$trgt_path" pw usershow -n $acct | cut -d : -f 9`}
# 			if [ ! -d "$trgt_path$home/.ssh" ]; then
# 				(umask 77 && mkdir "$trgt_path$home/.ssh")
# 				chroot "$trgt_path" chown $acct "$home/.ssh"
# 			fi
# 			if [ ! -f "$trgt_path$home/.ssh/authorized_keys" ]; then
# 				:> "$trgt_path$home/.ssh/authorized_keys"
# 				chroot "$trgt_path" chown $acct "$home/.ssh/authorized_keys"
# 			fi
# 			cat "$key" >> "$trgt_path$home/.ssh/authorized_keys"
# 		fi
# 	done
# }

if [ -n "$USER_NAME" ]; then
	if [ -z "${OPT_NO_PASSWD-}" ]; then
		read -p 'user password:' -r password
		read -p 'repeat password:' -r password_repeat
		[ "$password" = "$password_repeat" ] || (echo "password entered incorrectly" >&2 && exit 85)
	fi
	dataset="$POOL_NAME`dirname "$USER_PATH"`"
	if zfs list "$dataset"; then
		echo "Creating dataset $dataset/$USER_NAME for user home."
		zfs create $dataset/$USER_NAME
	else
		echo "No immediate parent dataset, not creating user home dataset."
	fi
	
	${CHROOTDIR:+chroot "$CHROOTDIR"} pw groupadd -n "$USER_NAME" ${GROUP_FLAGS-}
	if [ -z "${OPT_NO_PASSWD-}" ]; then
		${CHROOTDIR:+chroot "$CHROOTDIR"} pw useradd -m -n $USER_NAME -g $USER_NAME -c "$USER_FULL_NAME" ${USER_FLAGS-} -h 0 <<EOF
$password
EOF
		if [ -n "${OPT_SAMBA-}" ]; then
			${CHROOTDIR:+chroot "$CHROOTDIR"} smbpasswd -s -a $USER_NAME <<EOF
$password
$password
EOF
		fi
	else
		${CHROOTDIR:+chroot "$CHROOTDIR"} pw useradd -m -n $USER_NAME -g $USER_NAME -c "$USER_FULL_NAME" ${USER_FLAGS-}
		if [ -n "${OPT_SAMBA-}" ]; then
			${CHROOTDIR:+chroot "$CHROOTDIR"} smbpasswd -n -a $USER_NAME
		fi
	fi
	zfs snapshot $dataset/$USER_NAME@genesis
# 	key_install $USER_NAME "$keys"
	echo "Account for user $USER_NAME created."
fi
