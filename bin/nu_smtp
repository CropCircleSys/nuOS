#!/bin/sh
set -e; set -u; set -C

# nuOS 0.0.11.4a0 - bin/nu_smtp
#
# Copyright (c) 2008-2020 Chad Jacob Milios and Crop Circle Systems.
# All rights reserved.
#
# This Source Code Form is subject to the terms of the Simplified BSD License.
# If a copy of the Simplified BSD License was not distributed alongside this file, you can
# obtain one at https://www.freebsd.org/copyright/freebsd-license.html . This software
# project is not affiliated with the FreeBSD Project.
#
# Official updates and community support available at https://nuos.org .
# Professional services available at https://ccsys.com .

NUOS_VER=0.0.11.4a0

while getopts C:eh:j:p:sv OPT; do case $OPT in
	C) CHROOTDIR=$OPTARG;;
	e) OPT_ELECT=y;;
	h) HOST_NAME=$OPTARG;;
	j) JAIL_NAME=$OPTARG;;
	p) POOL_NAME=$OPTARG;;
	s) OPT_SSL=y;;
	v) OPT_VERBOSE=y;;
esac; done; shift $(($OPTIND-1))
[ $# = 0 ]

[ -z "${CHROOTDIR-}" ] || exit 43 # CHROOTDIR is unsupported, though we want to some day so most of the code is still written with support

. "$(dirname "$(realpath "$0")")/../lib/nu_system.sh"
. "$(dirname "$(realpath "$0")")/../lib/nu_common.sh"

nuos_init

if canhas ${JAIL_NAME-}; then
	JAIL_NAME_=`echo $JAIL_NAME | tr . _`
	jail_path="`jls -j $JAIL_NAME_ path`"
	alt_root=$jail_path
elif canhas "${CHROOTDIR-}"; then
	alt_root="${CHROOTDIR-}"
fi

hostname=${JAIL_NAME:+$JAIL_NAME.}${NEW_HOST:-${HOST:=`hostname`}}
if [ -n "${OPT_ELECT-}" ]; then
	default_servername=${JAIL_NAME:+$JAIL_NAME.}${hostname#${JAIL_NAME:+$JAIL_NAME.}*.}
else
	default_servername=${JAIL_NAME:+$JAIL_NAME.}$hostname
fi

echo 'host name       -h HOST_NAME      ' ${HOST_NAME:=${default_servername}}
echo 'pool name       -p POOL_NAME      ' ${POOL_NAME:=$POOL_BOOT_NAME}
echo -n 'promote server  -e OPT_ELECT       ' && [ -n "${OPT_ELECT-}" ] && echo set || echo null
echo -n 'ssl             -s OPT_SSL         ' && [ -n "${OPT_SSL-}" ] && echo set || echo null
echo

maybe_yell

[ -n "${OPT_ELECT-}" ] || [ "$HOST_NAME" = "$hostname" ]

[ ! -e "${alt_root-}/usr/local/etc/postfix/virtual" ]

touch "${alt_root-}/usr/local/etc/postfix/virtual" "${alt_root-}/usr/local/etc/postfix/aliases" "${alt_root-}/usr/local/etc/postfix/domains" "${alt_root-}/usr/local/etc/postfix/senders" "${alt_root-}/usr/local/etc/postfix/transport"

postmap "${alt_root-}/usr/local/etc/postfix/virtual" "${alt_root-}/usr/local/etc/postfix/domains" "${alt_root-}/usr/local/etc/postfix/senders" "${alt_root-}/usr/local/etc/postfix/transport"
postalias "${alt_root-}/usr/local/etc/postfix/aliases"

sed -ne '/^$/,${/^./,$p;}' "${alt_root-}/usr/local/etc/postfix/bounce.cf.default" > "${alt_root-}/usr/local/etc/postfix/bounce.cf"

cat >> "${alt_root-}/usr/local/etc/postfix/main.cf" <<'EOF'

recipient_delimiter = +
bounce_queue_lifetime = 0
bounce_size_limit = 80
remote_header_rewrite_domain = domain.invalid
authorized_flush_users = static:$mail_owner
authorized_mailq_users = static:$mail_owner
authorized_submit_users = !nobody, !unknown, static:anyone
alias_database = hash:$config_directory/aliases
alias_maps = $alias_database
message_size_limit = 67108864
mailbox_size_limit = 1073741824
virtual_alias_maps = hash:$config_directory/virtual
mailbox_transport_maps = hash:$config_directory/transport
virtual_alias_domains = hash:$config_directory/domains
smtpd_sender_login_maps = hash:$config_directory/senders
bounce_template_file = $config_directory/bounce.cf
smtpd_sasl_auth_enable = yes
smtpd_sasl_local_domain = $myorigin
smtpd_relay_restrictions = reject_authenticated_sender_login_mismatch, permit_sasl_authenticated, permit_mynetworks, reject_unauth_destination, reject_unlisted_recipient
#smtpd_relay_restrictions = reject_authenticated_sender_login_mismatch, permit_sasl_authenticated, permit_mynetworks
smtpd_client_restrictions = permit_sasl_authenticated, permit_mynetworks
smtpd_helo_required = yes
smtpd_helo_restrictions = permit_sasl_authenticated, permit_mynetworks, reject_invalid_hostname, reject_unknown_hostname, reject_non_fqdn_hostname
#smtpd_helo_restrictions = permit_sasl_authenticated, permit_mynetworks, reject_invalid_helo_hostname, reject_non_fqdn_helo_hostname, reject_unknown_helo_hostname
smtpd_sender_restrictions = reject_known_sender_login_mismatch
#smtpd_sender_restrictions = reject_sender_login_mismatch, reject_unlisted_sender, reject_unknown_sender_domain
#smtpd_recipient_restrictions = reject_unauth_destination, reject_unlisted_recipient
smtp_tls_security_level = dane
smtp_dns_support_level = dnssec
EOF

if [ -n "${OPT_SSL-}" ]; then
	mkdir "${alt_root-}/usr/local/etc/postfix/ssl"
	(umask 77 && mkdir "${alt_root-}/usr/local/etc/postfix/ssl/private")
	if zfs list $POOL_NAME-pvt > /dev/null 2>&1; then # this check will need to be refined if ever we support CHROOTDIR
		chflags schg "${alt_root-}/usr/local/etc/postfix/ssl/private"
		zfs create -o mountpoint=/usr/local/etc/postfix/ssl/private $POOL_NAME-pvt/sys/host/smtp-ssl
		chmod go-rx "${alt_root-}/usr/local/etc/postfix/ssl/private"
	fi
	if ! cp "${alt_root-}/etc/ssl/certs/$HOST_NAME.crt" "${alt_root-}/usr/local/etc/postfix/ssl/"; then
		cp "${alt_root-}/etc/ssl/certs/$HOST_NAME.internal.crt" "${alt_root-}/usr/local/etc/postfix/ssl/$HOST_NAME.crt"
		internal=y
	fi
	mkdir -p "${alt_root-}/etc/ssl/certs.installed/localhost/$HOST_NAME.${internal:+internal.}crt"
	ln -s "/usr/local/etc/postfix/ssl/$HOST_NAME.crt" "${alt_root-}/etc/ssl/certs.installed/localhost/$HOST_NAME.${internal:+internal.}crt/postfix"
	cp "${alt_root-}/etc/ssl/private/$HOST_NAME.key" "${alt_root-}/usr/local/etc/postfix/ssl/private/"
	cat >> "${alt_root-}/usr/local/etc/postfix/main.cf" <<EOF
smtpd_tls_security_level = may
smtpd_tls_auth_only = yes
smtp_tls_session_cache_database = btree:\$data_directory/smtp_scache
smtpd_tls_session_cache_database = btree:\$data_directory/smtpd_scache
smtpd_tls_cert_file = \$config_directory/ssl/$HOST_NAME.crt
smtpd_tls_key_file = \$config_directory/ssl/private/$HOST_NAME.key
EOF

	if cp "${alt_root-}/etc/ssl/certs/$HOST_NAME.ca.crt" "${alt_root-}/usr/local/etc/postfix/ssl/"; then
		mkdir -p "${alt_root-}/etc/ssl/certs.installed/localhost/$HOST_NAME.ca.crt"
		ln -s "/usr/local/etc/postfix/ssl/$HOST_NAME.ca.crt" "${alt_root-}/etc/ssl/certs.installed/localhost/$HOST_NAME.ca.crt/postfix"
		cat >> "${alt_root-}/usr/local/etc/postfix/main.cf" <<EOF
smtpd_tls_CAfile = \$config_directory/ssl/$HOST_NAME.ca.crt
EOF
	fi
fi

echo default servername: $default_servername
echo contrived hostname: $hostname
echo specified hostname: $HOST_NAME

if [ "$HOST_NAME" != "$hostname" ]; then
	echo 'smtp_helo_name = $myorigin' >> "${alt_root-}/usr/local/etc/postfix/main.cf"
	if [ "$HOST_NAME" = "$default_servername" ]; then
		echo 'myorigin = $mydomain' >> "${alt_root-}/usr/local/etc/postfix/main.cf"
	else
		echo "myorigin = $HOST_NAME" >> "${alt_root-}/usr/local/etc/postfix/main.cf"
	fi
fi

sed -i '' -Ee '
	/^#submission[[:>:]]/,/^#[[:graph:]]/{
		s/^#(submission[[:>:]].*)$/\1/
		s/^#([[:blank:]]+-o (syslog_name|smtpd_tls_security_level|smtpd_sasl_auth_enable|milter_macro_daemon_name)=.*)$/\1/
	}
' "${alt_root-}/usr/local/etc/postfix/master.cf"

zfs list $POOL_NAME/svc 2> /dev/null || zfs create -o mountpoint=none -o canmount=off $POOL_NAME/svc
zfs create -o mountpoint=none -o canmount=off $POOL_NAME/svc/smtp
zfs create -o mountpoint=none -o canmount=off $POOL_NAME/svc/smtp/postfix

eval `stat -f "mode=%OMp%03OLp uid=%Du gid=%Dg flags=%Of" "${alt_root-}/var/db/postfix"`
zfs create -o mountpoint="${jail_path-}/var/db/postfix" $POOL_NAME/svc/smtp/postfix/db
chown $uid:$gid "${alt_root-}/var/db/postfix"
chmod $mode "${alt_root-}/var/db/postfix"
chflags $flags "${alt_root-}/var/db/postfix"

eval `stat -f "mode=%OMp%03OLp uid=%Du gid=%Dg flags=%Of" "${alt_root-}/var/spool/postfix"`
mv "${alt_root-}/var/spool/postfix" "${alt_root-}/var/spool/postfix.orig"
zfs create -o mountpoint="${jail_path-}/var/spool/postfix" $POOL_NAME/svc/smtp/postfix/spool
chown $uid:$gid "${alt_root-}/var/spool/postfix"
chmod $mode "${alt_root-}/var/spool/postfix"

mv "${alt_root-}/var/spool/postfix.orig/"* "${alt_root-}/var/spool/postfix/"
mv "${alt_root-}/var/spool/postfix.orig/".* "${alt_root-}/var/spool/postfix/" 2> /dev/null || true
rmdir "${alt_root-}/var/spool/postfix.orig"
chflags $flags "${alt_root-}/var/spool/postfix"

zfs snapshot -r $POOL_NAME/svc/smtp/postfix@genesis

sister ${JAIL_NAME:+-j $JAIL_NAME} enable_svc ${CHROOTDIR:+-C "$CHROOTDIR"} postfix

echo "Configured $HOST_NAME for smtp service."
