#!/bin/sh
set -e; set -u; set -C

# nuOS 0.0.11.1a1 - bin/nu_vpn_client - LICENSE: MOZ_PUB
#
# Copyright (c) 2008-2017 Chad Jacob Milios and Crop Circle Systems, Inc.
# All rights reserved.
#
# This Source Code Form is subject to the terms of the Mozilla Public License, v2.0.
# If a copy of the MPL was not distributed alongside this file, you can obtain one at
# https://www.mozilla.org/MPL/2.0 . This software project is not affiliated with the
# Mozilla Foundation.
#
# Official updates and community support available at https://nuos.org .
# Other licensing options and professional services available at https://ccsys.com .

NUOS_VER=0.0.11.1a1

while getopts A:c:C:h:k:s:v OPT; do case $OPT in
	A) ALTERNATE=$OPTARG;;
	c) CERT_FILE=$OPTARG; grep -q -- '-BEGIN CERTIFICATE-' "$CERT_FILE";;
	C) CHROOTDIR=$OPTARG;;
	h) HOST_NAME=$OPTARG;;
	k) KEY_FILE=$OPTARG; grep -q -- '-BEGIN .* PRIVATE KEY-' "$KEY_FILE";;
	s) SERVER_HOST=$OPTARG;;
	v) OPT_VERBOSE=y;;
esac; done; shift $(($OPTIND-1))
[ $# = 0 ]

. "$(dirname "$(realpath "$0")")/../lib/nu_system.sh"
. "$(dirname "$(realpath "$0")")/../lib/nu_common.sh"

nuos_init -q
nuos_ssl_init

maybe_yell

: ${SERVER_HOST:=`$SSL_CMD x509 -noout -subject -nameopt sep_multiline -in "${CHROOTDIR-}/usr/local/etc/openvpn/${ALTERNATE:+${ALTERNATE}_}server.crt" | sed -Ee '/^[[:blank:]]*CN=/!d;s/^[[:blank:]]*CN=//'`}
: ${HOST_NAME:=$HOST}
: ${CERT_FILE:="${CHROOTDIR-}/etc/ssl/certs/$HOST_NAME.internal.crt"}
: ${KEY_FILE:="${CHROOTDIR-}/etc/ssl/private/$HOST_NAME.key"}

[ -r "${CHROOTDIR-}/usr/local/etc/openvpn/${ALTERNATE:+${ALTERNATE}_}ca.crt" ]
[ -r "${CHROOTDIR-}/usr/local/etc/openvpn/${ALTERNATE:+${ALTERNATE}_}dh"*".pem" ]
[ -r "${CHROOTDIR-}/usr/local/etc/openvpn/private/${ALTERNATE:+${ALTERNATE}_}ta.key" ]

cat <<EOF
`grep '^dev ' "${CHROOTDIR-}/usr/local/etc/openvpn/openvpn${ALTERNATE:+_$ALTERNATE}.conf"`
`grep '^topology ' "${CHROOTDIR-}/usr/local/etc/openvpn/openvpn${ALTERNATE:+_$ALTERNATE}.conf"`
client
remote $SERVER_HOST
verify-x509-name $SERVER_HOST name
float
`grep '^cipher ' "${CHROOTDIR-}/usr/local/etc/openvpn/openvpn${ALTERNATE:+_$ALTERNATE}.conf"`
`grep ^comp- "${CHROOTDIR-}/usr/local/etc/openvpn/openvpn${ALTERNATE:+_$ALTERNATE}.conf"`
user nobody
group nobody
persist-key
persist-tun
keepalive 15 90
key-direction 1
<key>
`cat "$KEY_FILE" 2>/dev/null || echo %%-PRIVATE_KEY-%%`
</key>
<cert>
`cat "$CERT_FILE" 2>/dev/null || echo %%-CERTIFICATE-%%`
</cert>
<ca>
`cat "${CHROOTDIR-}/usr/local/etc/openvpn/${ALTERNATE:+${ALTERNATE}_}ca.crt"`
</ca>
<dh>
`cat "${CHROOTDIR-}/usr/local/etc/openvpn/${ALTERNATE:+${ALTERNATE}_}dh"*".pem"`
</dh>
<tls-auth>
`cat "${CHROOTDIR-}/usr/local/etc/openvpn/private/${ALTERNATE:+${ALTERNATE}_}ta.key"`
</tls-auth>
EOF
