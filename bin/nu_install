#!/bin/sh
set -e; set -u; set -C

# nuOS 0.0.9.2a1 - bin/nu_install - LICENSE: MOZ_PUB
#
# Copyright (c) 2008-2013 Chad Jacob Milios and Crop Circle Systems, Inc.
# All rights reserved.
#
# This Source Code Form is subject to the terms of the Mozilla Public License, v2.0.
# If a copy of the MPL was not distributed alongside this file, you can obtain one at
# http://mozilla.org/MPL/2.0/ . This software project is not affiliated with the Mozilla
# Foundation.
#
# Official updates and community support available at http://nuos.org .
# Other licensing options and professional services available at http://ccsys.com .

NUOS_VER=0.0.9.2a1

while getopts a:b:Bd:DFh:i:m:o:p:PqQs:St:u:vzZ OPT; do
	case $OPT in
		a)
			ADMIN_ACCT="$OPTARG"
			;;
		b)
			BD_ACCT="$OPTARG"
			;;
		B)
			OPT_NOBRAND=y
			;;
		d) # must be set unless (-S)wap is used
			POOL_DEVS="$OPTARG"
			;;
		D) # nuOS developer's shortcut: -DD
			if [ -n "${OPT_DEBUG-}" ]; then
				COPY_PORTS=y
				COPY_PORT_OPTS=y
				COPY_DEV_PKGS=y
				COPY_SRC=y
				COPY_SVN=y
			fi
			OPT_DEBUG=y
			;;
		f) # unused reserved
			OPT_FORCE_INSTALL=y
			;;
		F)
			OPT_FORCE_BUILD=y
			;;
		h)
			NEW_HOST="$OPTARG"
			;;
		i)
			INJECT_CACHE="$OPTARG"
			;;
		m)
			POOL_MNT="$OPTARG"
			;;
		o)
			POOL_OPTS="$OPTARG"
			;;
		p)
			POOL_NAME="$OPTARG"
			;;
		P)
			OPT_DONT_PRESERVE_DIST_SNAP=y
			;;
		q)
			OPT_QUICK=y
			;;
		s) # this is the reservation for swap on the pool
			SWAP_SIZE="$OPTARG"
			;;
		S) # this is to install into 8 fat chunks of main mem
			OPT_SWAP=y
			;;
		t) # raidz (default), raidz2, raidz3, mirror or ''
			POOL_TYPE="$OPTARG"
			;;
		u)
			USER_ACCT="$OPTARG"
			;;
		v)
			[ -n "${OPT_VERBOSE-}" ] && export OPT_VERBOSE
			OPT_VERBOSE=y
			;;
		z)
			OPT_SKIP_INIT_ZPOOL=y
			;;
		Z)
			OPT_ONLY_INIT_ZPOOL=y
			;;
		*)
			echo "usage: `basename $0` [-BFPqSvzZ] [-a admin-acct] [-b backdoor-acct] [-u user-acct] [-h new-host] [-s swap-size] [-d pool-devs] [-m pool-mnt] [-o pool-opts] [-p pool-name] [-t pool-type]" >&2
			exit 1
	esac
done

. "$(dirname "$(realpath "$0")")/../lib/nu_system.sh"
. "$(dirname "$(realpath "$0")")/../lib/nu_common.sh"
. "$(dirname "$(realpath "$0")")/../lib/nu_admin.sh"
. "$(dirname "$(realpath "$0")")/../lib/nu_install.sh"

baseos_init
nuos_init
install_vars_init
admin_init

maybe_pause
maybe_yell

if [ -z "${OPT_SKIP_INIT_ZPOOL-}" ]; then
	i=0
	for dev in $POOL_DEVS; do
		gpart create -s GPT /dev/$dev
		gpart add -a 8 -t freebsd-boot -s 128 /dev/$dev
		gpart add -a 8 -t freebsd-zfs -l $POOL_NAME$i /dev/$dev
		gpart set -a bootme -i 2 /dev/$dev
		gpart bootcode -b /boot/pmbr -p /boot/gptzfsboot -i 1 /dev/$dev
		gnop create -S 4096 /dev/gpt/$POOL_NAME$i
		nextdev="/dev/gpt/$POOL_NAME$i.nop"
		push devlist $nextdev
		i=$(($i + 1))
	done
	require_tmp tempdir
	zpool create -o altroot=$POOL_MNT -o cachefile=$tempdir/zpool.cache -O mountpoint=none -O canmount=off -O devices=off $POOL_OPTS $POOL_NAME $POOL_TYPE $devlist
	zpool export $POOL_NAME
	gnop destroy $devlist
	zpool import -o altroot=$POOL_MNT -o cachefile=$tempdir/zpool.cache $POOL_NAME
fi
if [ -n "${OPT_ONLY_INIT_ZPOOL-}" ]; then
	[ -z "${OPT_SKIP_INIT_ZPOOL-}" ]
	exit
fi

if [ -n "${OPT_FORCE_BUILD-}" \
	-o "${POOL_BASEOS_TYPE-}" != $BASEOS_TYPE \
	-o "${POOL_BASEOS_VER-}" != $BASEOS_VER \
	-o "${POOL_HOSTOS_TYPE-}" != nuOS \
	-o "${POOL_HOSTOS_VER-}" != $NUOS_VER \
	-o "${HOSTOS_NOBRAND-}" != "${OPT_NOBRAND-}" \
]; then
	must_build=y
	require_base_src
	
	zfs create -o mountpoint=none -o canmount=off $POOL_NAME/os
	zfs create -o mountpoint=none -o canmount=off $POOL_NAME/os/$BASEOS_TYPE
	zfs create -o mountpoint=/ -o canmount=noauto $POOL_NAME/os/$BASEOS_TYPE/$BASEOS_VER
	zfs mount $POOL_NAME/os/$BASEOS_TYPE/$BASEOS_VER
	zfs create $POOL_NAME/os/$BASEOS_TYPE/$BASEOS_VER/etc
	zfs create $POOL_NAME/os/$BASEOS_TYPE/$BASEOS_VER/var
	zfs create $POOL_NAME/os/$BASEOS_TYPE/$BASEOS_VER/var/db
	
	(cd /usr/src && make -D WITHOUT_KERNEL_SYMBOLS DESTDIR=$POOL_MNT KERNCONF=$TRGT_KERN installkernel installworld distribution)
	:> $POOL_MNT/etc/fstab
	
	zfs snapshot -r $POOL_NAME/os/$BASEOS_TYPE/$BASEOS_VER@dist
	
	cat > $POOL_MNT/boot/loader.conf <<'EOF'
zfs_load="YES"
EOF
	
	cat > $POOL_MNT/etc/rc.conf <<'EOF'
zfs_enable="YES"
EOF
	
	zfs snapshot -r $POOL_NAME/os/$BASEOS_TYPE/$BASEOS_VER@blank

	(cd $POOL_MNT && mkdir -p compat/linux/proc compat/linux/sys etc/local usr/ports/packages)
	ln -s ../../etc/local $POOL_MNT/usr/local/etc
	
	cat >> $POOL_MNT/etc/fstab <<'EOF'
tmp /tmp tmpfs rw 0 0
fdesc /dev/fd fdescfs rw 0 0
proc /proc procfs rw 0 0
EOF

	zfs snapshot -r $POOL_NAME/os/$BASEOS_TYPE/$BASEOS_VER@bare
	
	zfs set mountpoint=none $POOL_NAME/os/$BASEOS_TYPE/$BASEOS_VER
	zfs set canmount=off $POOL_NAME/os/$BASEOS_TYPE/$BASEOS_VER
	
	zfs create -o mountpoint=none -o canmount=off $POOL_NAME/os/nuOS
	zfs clone -o mountpoint=/ -o canmount=noauto $POOL_NAME/os/$BASEOS_TYPE/$BASEOS_VER@bare $POOL_NAME/os/nuOS/$NUOS_VER
	zfs clone $POOL_NAME/os/$BASEOS_TYPE/$BASEOS_VER/etc@bare $POOL_NAME/os/nuOS/$NUOS_VER/etc
	zfs clone $POOL_NAME/os/$BASEOS_TYPE/$BASEOS_VER/var@bare $POOL_NAME/os/nuOS/$NUOS_VER/var
	zfs clone $POOL_NAME/os/$BASEOS_TYPE/$BASEOS_VER/var/db@bare $POOL_NAME/os/nuOS/$NUOS_VER/var/db
	
	cat >> $POOL_MNT/etc/fstab <<'EOF'
#linproc /compat/linux/proc linprocfs rw 0 0
#linsys /compat/linux/sys linsysfs rw 0 0
EOF
	
	cat >> $POOL_MNT/boot/loader.conf <<'EOF'
autoboot_delay="3"
ipfw_load="YES"
#linux_load="YES"
sem_load="YES"
accf_data_load="YES"
accf_dns_load="YES"
accf_http_load="YES"
#snd_hda_load="YES"
#kern.ipc.shmmni="1024"
#kern.ipc.shmseg="1024"
EOF
	
	cat >> $POOL_MNT/etc/rc.conf <<'EOF'
#linux_enable="YES"
entropy_file="/var/db/entropy/seed"
firewall_enable="YES"
firewall_type="open"
firewall_nat_flags="same_ports reset"
devfs_load_rulesets="YES"
sendmail_submit_enable="NO"
sendmail_outbound_enable="NO"
sendmail_msp_queue_enable="NO"
EOF
	
	cat > $POOL_MNT/etc/rc.conf.local <<'EOF'
#ifconfig_DEFAULT="DHCP"
#gateway_enable="YES"
#firewall_nat_enable="YES"
#firewall_nat_interface="net0" # this needs to be set correctly, not just enabled
EOF
	
	cat >> $POOL_MNT/etc/sysctl.conf <<'EOF'
net.inet.ip.fw.one_pass=0
EOF
	
	cat > $POOL_MNT/etc/periodic.conf <<'EOF'
daily_output="/var/log/daily.log"
weekly_output="/var/log/weekly.log"
monthly_output="/var/log/monthly.log"
daily_status_security_inline="YES"
daily_show_success="NO"
weekly_show_success="NO"
monthly_show_success="NO"
daily_status_security_chksetuid_enable="NO"
daily_status_security_neggrpperm_enable="NO"
daily_clean_hoststat_enable="NO"
daily_status_mail_rejects_enable="NO"
daily_status_include_submit_mailq="NO"
daily_submit_queuerun="NO"
weekly_locate_enable="NO"
weekly_whatis_enable="NO"
EOF
	
	cat >> $POOL_MNT/etc/ssh/sshd_config <<'EOF'
UseDNS no
EOF
	
	cat > $POOL_MNT/etc/jail.conf <<'EOF'
$tmpfs_args = "-o size=1073741824";
path = "/var/jail/$name";
host.hostname = "$name.jail";
devfs_ruleset = 4;
exec.clean;
exec.prestart = "mount -t devfs dev $path/dev && devfs -m $path/dev rule -s $devfs_ruleset applyset && ln -sf /var/run/log $path/dev/log";
exec.prestart += "mount -t fdescfs fdesc $path/dev/fd";
exec.prestart += "mount -t tmpfs $tmpfs_args tmp $path/tmp";
exec.prestart += "mount -t procfs proc $path/proc";
exec.start = "/bin/sh /etc/rc";
exec.stop = "/bin/sh /etc/rc.shutdown";
exec.poststop = "umount $path/proc";
exec.poststop += "umount $path/tmp";
exec.poststop += "umount $path/dev/fd";
exec.poststop += "umount $path/dev";
enforce_statfs = 1;
interface = "lo0";
ip_hostname;
allow.chflags;
allow.quotas;
children.max = 256;
EOF
	
	prepare_make_conf -i make_conf cmd_to_retire_make_conf
	cat $make_conf > $POOL_MNT/etc/make.conf
	$cmd_to_retire_make_conf $make_conf
	
	cat >> $POOL_MNT/boot/loader.conf <<'EOF'
init_script="/boot/init.sh"
EOF
	
	cat > $POOL_MNT/boot/init.sh <<'EOF'
#!/bin/sh
set -e; set -u; set -C
or_x () {
        if [ -x "$2" ]; then setvar $1 $2; else setvar $1 $3; fi
}
or_x kenv /bin/kenv /rescue/kenv
or_x zfs /sbin/zfs /rescue/zfs
mountfrom=`$kenv vfs.root.mountfrom`
ds=${mountfrom#zfs:}
pool=${ds%%/*}
$zfs rollback -r $pool/swap/host@blank || err_swap=$?
if [ -n "${err_swap-}" ]; then
	or_x echo /bin/echo /rescue/echo
	$echo 'WARNING: swap zvol not found or not reinitialized' >&2
fi
$zfs mount $ds/etc
EOF
	
	
	if [ -z "${OPT_NOBRAND-}" ]; then
		
		baseos_type_lc=`echo "$BASEOS_TYPE" | tr '[:upper:]' '[:lower:]'`
		
		mv -n $POOL_MNT/etc/motd $POOL_MNT/etc/motd.$baseos_type_lc
		head -n 1 $POOL_MNT/etc/motd.$baseos_type_lc > $POOL_MNT/etc/motd
		cat >> $POOL_MNT/etc/motd <<EOF
nuOS $NUOS_VER

Welcome to nuOS!

Official updates and community support available at http://nuos.org .

If you would like to donate to the nuOS Project, please send BTC to one, any or
all of the following seven addresses. Your contributions are greatly appreciated
and allow nuOS to thrive. Thank you.

+-----------------------------------------------------------------------------+
|   nuOS association root bitcoin donation addresses (valid during 2013 UTC)  |
+--------------------------------------+--------------------------------------+
|  16xPJ4MNCDudem5FFZJyRYCfgFPzYRyJGG  |  175V9B8cJuE4JKwtFgKjoFAVSU9cFwVtVi  |
+--------------------------------------+--------------------------------------+
|  1L2Kn3oQDdNHDktdT8GWqEVCCwhvF7WRZ4  |  1BPaf5rdkhnSi4uHhWHbH82ayCe32z41vz  |
+--------------------------------------+--------------------------------------+
|  1M1JBj5qf1BTp7Su51KdZTRK8mW8ArzHEs  |  12JV99k5rrFmgWisvmmkZhE6suZ2FxZ3Be  |
+--------------------------------------+--------------------------------------+
|  19gPJ8Ai9MH3GBfQfhkZTyHv9KkmNRb9Qg  |  - more addresses in PLANNING doc -  |
+--------------------------------------+--------------------------------------+

Edit /etc/motd to change this login announcement.

EOF
		
		nuos_supported_len=`echo -n "$NUOS_SUPPORTED" | wc -m | awk '{print \$1}'`
		[ $nuos_supported_len -le 23 ]
		nuos_supported_23_chrs=`echo "$NUOS_SUPPORTED" | awk '{printf "%-23s", \$1}'`
		baseos_info_url="http://$baseos_type_lc.org"
		
		patch -b '' $POOL_MNT/boot/beastie.4th <<EOF
174a175,197
> : nuosbw-logo ( x y -- ) \\ B/W nuOS spam (21 rows x 33ish columns)
> 
> 	2dup at-xy ."      Copyright (c) 2008-2013" 1+
> 	2dup at-xy ." " 1+
> 	2dup at-xy ."   $BASEOS_TYPE Edition (a.k.a. nuBSD)" 1+
> 	2dup at-xy ."   extends $BASEOS_TYPE $BASEOS_VER" 1+
> 	2dup at-xy ." " 1+
> 	2dup at-xy ."   Official updates and community" 1+
> 	2dup at-xy ."        support available at" 1+
> 	2dup at-xy ."         http://nuos.org ." 1+
> 	2dup at-xy ." " 1+
> 	2dup at-xy ."    Other licensing options and" 1+
> 	2dup at-xy ."  professional services available" 1+
> 	2dup at-xy ." from Crop Circle Systems, Inc. at" 1+
> 	2dup at-xy ."         http://ccsys.com ." 1+
> 	2dup at-xy ." " 1+
> 	2dup at-xy ."   More information about $BASEOS_TYPE" 1+
> 	     at-xy ." available at $baseos_info_url ."
> 
> 	\\ Put the cursor back at the bottom
> 	0 25 at-xy
> ;
> 
186a210
> \\ 	nuosbw      B/W nuOS spam (21 rows x 33ish columns)
233a258,261
> 	2dup s" nuosbw" compare-insensitive 0= if
> 		logoX @ logoY @ nuosbw-logo
> 		2drop exit
> 	then
EOF
		
		patch -b '' $POOL_MNT/boot/brand.4th <<EOF
49a50,63
> : nuos-logo ( x y -- ) \\ "nuOS" logo in B/W (7 rows x 38 columns)
> 
> 	2dup at-xy ." nuOS $NUOS_VER" 1+
> 	2dup at-xy ." $nuos_supported_23_chrs _____   _____" 1+
> 	2dup at-xy ."        ______  _     _ / ___ \\ / ____|" 1+
> 	2dup at-xy ."       |  ___ \\| |   | | |   | | (___" 1+
> 	2dup at-xy ."       | |   | | |   | | |   | |\\___ \\" 1+
> 	2dup at-xy ."       | |   | | |___| | |___| |____) |" 1+
> 	     at-xy ."       |_|   |_|\\______|\\_____/|_____/"
> 
> 	\\ Put the cursor back at the bottom
> 	0 25 at-xy
> ;
> 
57a72
> \\ 	nuos        nuOS banner
89a105,109
> 	2dup s" nuos" compare-insensitive 0= if
> 		brandX @ brandY @ nuos-logo
> 		2drop exit
> 	then
> 
EOF
		
		patch -b '' $POOL_MNT/boot/menu.4th <<'EOF'
420c420
< 		drop s" Welcome to FreeBSD"
---
> 		drop s" Welcome to nuOS"
EOF
		
		cat >> $POOL_MNT/boot/loader.conf <<'EOF'
loader_brand="nuos"
loader_logo="nuosbw"
EOF
		
		mkdir $POOL_MNT/usr/nuos
		tar -cpf - -C "$(dirname "$(realpath "$0")")/.." --exclude ./conf . | tar -xpvf - -C $POOL_MNT/usr/nuos
		conf=usr/nuos/conf
		
	else
		conf=etc/nuos.conf
		echo HOSTOS_NOBRAND=y > $POOL_MNT/$conf
	fi
	
	cat >> $POOL_MNT/$conf <<EOF
HOSTOS_TYPE=nuOS
HOSTOS_VER=$NUOS_VER
PARENT=`whoami`@`hostname`
PARENT_HOSTOS_TYPE=$HOSTOS_TYPE
PARENT_HOSTOS_VER=$HOSTOS_VER
PARENT_BASEOS_TYPE=`uname -s`
PARENT_BASEOS_VER=`uname -r`
PARENT_KERN=`uname -v | awk '{print $NF}'`
POOL_BASEOS_TYPE=$BASEOS_TYPE
POOL_BASEOS_VER=$BASEOS_VER
POOL_HOSTOS_TYPE=nuOS
POOL_HOSTOS_VER=$NUOS_VER
HOSTOS_ARCH=$TRGT_ARCH
HOSTOS_PROC=$TRGT_PROC
HOSTOS_KERN=$TRGT_KERN
HOSTOS_OPTZ=$TRGT_OPTZ
EOF
		
	zfs snapshot -r $POOL_NAME/os/nuOS/$NUOS_VER@blank
	
	sister nu_install_pkg -C $POOL_MNT sysutils/memtest86+

	patch -b '' $POOL_MNT/boot/menu-commands.4th <<'EOF'
190a191,196
> 
> : memtest-boot ( -- )
>         s" unload" evaluate
>         s" load /boot/opt/memtest86+" evaluate
>         s" boot" evaluate
> ;
EOF
	
	patch -b '' $POOL_MNT/boot/menu.rc <<'EOF'
69a70,76
> set menu_caption[8]="MemTest86+ RAM test"
> \ set menu_caption[8]="Mem[T]est86+ RAM test"
> set menu_command[8]="memtest-boot"
> \ set menu_keycode[8]="114"
> set ansi_caption[8]="MemTest86+ RAM test"
> \ set ansi_caption[8]="Mem[1mT[37mest86+ RAM test"
> 
EOF
	
	sister nu_install_pkg -C $POOL_MNT sysutils/jail2

	zfs snapshot -r $POOL_NAME/os/nuOS/$NUOS_VER@bare
	
	sister nu_install_pkg -C $POOL_MNT sysutils/screen
	sister nu_install_pkg -C $POOL_MNT misc/buffer sysutils/pipemeter archivers/lzop sysutils/smartmontools
	sister nu_install_pkg -C $POOL_MNT net/rsync
	
	zfs snapshot -r $POOL_NAME/os/nuOS/$NUOS_VER@lite

	#sister nu_install_pkg -C $POOL_MNT net/netatalk3
	#sister nu_install_pkg -C $POOL_MNT databases/mongodb databases/redis www/npm www/apache24
	#sister nu_install_pkg -C $POOL_MNT mail/cyrus-imapd24 security/cyrus-sasl2-saslauthd
	#sister nu_install_pkg -C $POOL_MNT -y mail/postfix
	#sister nu_install_pkg -C $POOL_MNT devel/subversion devel/git
	#sister nu_install_pkg -C $POOL_MNT ports-mgmt/portupgrade
	#sister nu_install_pkg -C $POOL_MNT emulators/virtualbox-ose
	#sister nu_install_pkg -C $POOL_MNT graphics/povray36
	#sister nu_install_pkg -C $POOL_MNT graphics/graphviz
	#sister nu_install_pkg -C $POOL_MNT x11-fonts/webfonts
	#sister nu_install_pkg -C $POOL_MNT print/teTeX
	
	#sister nu_install_pkg -C $POOL_MNT graphics/gimp
	#sister nu_install_pkg -C $POOL_MNT x11/xorg
	#sister nu_install_pkg -C $POOL_MNT x11/kde4
	#sister nu_install_pkg -C $POOL_MNT www/firefox
	#sister nu_install_pkg -C $POOL_MNT mail/thunderbird
	#sister nu_install_pkg -C $POOL_MNT editors/libreoffice
	
	zfs snapshot -r $POOL_NAME/os/nuOS/$NUOS_VER@base
	
else
	zfs send -R $POOL_BOOT_NAME/os/$BASEOS_TYPE/$BASEOS_VER@bare | zfs receive -vd $POOL_NAME
	zfs set mountpoint=none  $POOL_NAME/os
	zfs set canmount=off $POOL_NAME/os
	zfs set mountpoint=none $POOL_NAME/os/$BASEOS_TYPE
	zfs set canmount=off $POOL_NAME/os/$BASEOS_TYPE
	zfs send -R $POOL_BOOT_NAME/os/nuOS/$NUOS_VER@base | zfs receive -vd $POOL_NAME
	zfs set canmount=off $POOL_NAME/os/nuOS
fi

zfs create -o mountpoint=/usr/src $POOL_NAME/os/$BASEOS_TYPE/src-$BASEOS_VER
zfs create -o mountpoint=/usr/obj $POOL_NAME/os/$BASEOS_TYPE/obj-$BASEOS_VER
if [ -n "${COPY_SRC-}" ]; then
	if [ -z "${OPT_FORCE_BUILD-}" -a -n "${POOL_BOOT_NAME-}" ] \
		&& zfs list $POOL_BOOT_NAME/os/$BASEOS_TYPE/src-$BASEOS_VER@dist \
		&& [ -n "${COPY_SVN-}" -a -d /usr/src/.zfs/snapshot/dist/.svn ] \
			|| [ -z "${COPY_SVN-}" -a ! -d /usr/src/.zfs/snapshot/dist/.svn ]
	then
		zfs send $POOL_BOOT_NAME/os/$BASEOS_TYPE/src-$BASEOS_VER@dist | zfs receive -vFd $POOL_NAME
		if [ -n "${OPT_DONT_PRESERVE_DIST_SNAP-}" ]; then
			zfs destroy $POOL_NAME/os/$BASEOS_TYPE/src-$BASEOS_VER@dist
		fi
	else
		if [ -z "${COPY_SVN-}" ]; then
			exclude_svn=y
		fi
		tar -cpf - -C /usr ${exclude_svn:+--exclude src/.svn} src | tar -xpvf - -C $POOL_MNT/usr
		if [ -z "${OPT_DONT_PRESERVE_DIST_SNAP-}" ]; then
			zfs snapshot $POOL_NAME/os/$BASEOS_TYPE/src-$BASEOS_VER@dist
		fi
	fi
	if [ -z "${OPT_FORCE_BUILD-}" -a -n "${POOL_BOOT_NAME-}" ] \
		&& zfs list $POOL_BOOT_NAME/os/$BASEOS_TYPE/obj-$BASEOS_VER@dist
	then
		zfs send $POOL_BOOT_NAME/os/$BASEOS_TYPE/obj-$BASEOS_VER@dist | zfs receive -vFd $POOL_NAME
		if [ -n "${OPT_DONT_PRESERVE_DIST_SNAP-}" ]; then
			zfs destroy $POOL_NAME/os/$BASEOS_TYPE/obj-$BASEOS_VER@dist
		fi
	else
		tar -cpf - -C /usr obj | tar -xpvf - -C $POOL_MNT/usr
		if [ -z "${OPT_DONT_PRESERVE_DIST_SNAP-}" ]; then
			zfs snapshot $POOL_NAME/os/$BASEOS_TYPE/obj-$BASEOS_VER@dist
		fi
	fi
fi
zfs unmount $POOL_NAME/os/$BASEOS_TYPE/src-$BASEOS_VER
zfs unmount $POOL_NAME/os/$BASEOS_TYPE/obj-$BASEOS_VER

snaptime=`date "+%s"`

zfs create -o mountpoint=/var/db/portsnap $POOL_NAME/os/$BASEOS_TYPE/portsnap-db
zfs create -o mountpoint=/usr/ports $POOL_NAME/os/$BASEOS_TYPE/ports-current
zfs create -o mountpoint=/usr/ports/distfiles $POOL_NAME/os/$BASEOS_TYPE/ports-distfiles
zfs unmount $POOL_NAME/os/$BASEOS_TYPE/ports-distfiles
if [ -n "${COPY_PORTS-}" ]; then
	if [ -z "${OPT_FORCE_BUILD-}" -a -n "${POOL_BOOT_NAME-}" ] \
		&& zfs list $POOL_BOOT_NAME/os/$BASEOS_TYPE/portsnap-db
	then
		zfs snapshot $POOL_BOOT_NAME/os/$BASEOS_TYPE/portsnap-db@$snaptime
		zfs send $POOL_BOOT_NAME/os/$BASEOS_TYPE/portsnap-db@$snaptime | zfs receive -vF $POOL_NAME/os/$BASEOS_TYPE/portsnap-db
		zfs destroy $POOL_BOOT_NAME/os/$BASEOS_TYPE/portsnap-db@$snaptime
		zfs destroy $POOL_NAME/os/$BASEOS_TYPE/portsnap-db@$snaptime
	else
		require_portsnap_files
		tar -cpf - -C /var/db portsnap | tar -xpvf - -C $POOL_MNT/var/db
	fi
	if [ -z "${OPT_DONT_PRESERVE_DIST_SNAP-}" ]; then
		zfs snapshot $POOL_NAME/os/$BASEOS_TYPE/portsnap-db@dist
	fi
	if [ -z "${OPT_FORCE_BUILD-}" -a -n "${POOL_BOOT_NAME-}" ] \
		&& zfs list $POOL_BOOT_NAME/os/$BASEOS_TYPE/ports-current
	then
		zfs snapshot $POOL_BOOT_NAME/os/$BASEOS_TYPE/ports-current@$snaptime
		zfs send $POOL_BOOT_NAME/os/$BASEOS_TYPE/ports-current@$snaptime | zfs receive -vF $POOL_NAME/os/$BASEOS_TYPE/ports-current
		zfs destroy $POOL_BOOT_NAME/os/$BASEOS_TYPE/ports-current@$snaptime
		zfs destroy $POOL_NAME/os/$BASEOS_TYPE/ports-current@$snaptime
	else
		portsnap -d $POOL_MNT/var/db/portsnap -f $POOL_MNT/etc/portsnap.conf -p $POOL_MNT/usr/ports extract
		if [ -d /usr/ports/local ]; then
			tar -cpf - -C /usr/ports local | tar -xpvf - -C $POOL_MNT/usr/ports
		fi
	fi
	if [ -z "${OPT_DONT_PRESERVE_DIST_SNAP-}" ]; then
		zfs snapshot $POOL_NAME/os/$BASEOS_TYPE/ports-current@dist
	fi
fi
zfs unmount $POOL_NAME/os/$BASEOS_TYPE/portsnap-db
zfs unmount $POOL_NAME/os/$BASEOS_TYPE/ports-current

if [ -n "${COPY_PORT_OPTS-}" ]; then
	tar -cpf - -C /var/db ports | tar -xpvf - -C $POOL_MNT/var/db
fi

zfs create -o mountpoint=/usr/ports/packages $POOL_NAME/os/nuOS/pkg-$NUOS_VER
if [ -n "${COPY_DEV_PKGS-}" ]; then
	if [ -z "${OPT_FORCE_BUILD-}" -a -n "${POOL_BOOT_NAME-}" ] \
		&& zfs list $POOL_BOOT_NAME/os/nuOS/pkg-$NUOS_VER
	then
		zfs snapshot $POOL_BOOT_NAME/os/nuOS/pkg-$NUOS_VER@$snaptime
		zfs send $POOL_BOOT_NAME/os/nuOS/pkg-$NUOS_VER@$snaptime | zfs receive -vF $POOL_NAME/os/nuOS/pkg-$NUOS_VER
		zfs destroy $POOL_BOOT_NAME/os/nuOS/pkg-$NUOS_VER@$snaptime
		zfs destroy $POOL_NAME/os/nuOS/pkg-$NUOS_VER@$snaptime
	else
		tar -cpf - -C /usr/ports packages | tar -xpvf - -C $POOL_MNT/usr/ports
	fi
	if [ -z "${OPT_DONT_PRESERVE_DIST_SNAP-}" ]; then
		zfs snapshot $POOL_NAME/os/nuOS/pkg-$NUOS_VER@dist
	fi
fi
zfs unmount $POOL_NAME/os/nuOS/pkg-$NUOS_VER

zfs set mountpoint=none $POOL_NAME/os/nuOS/$NUOS_VER
zfs set canmount=off $POOL_NAME/os/nuOS/$NUOS_VER

zfs create -o mountpoint=none -o canmount=off $POOL_NAME/sys
zfs clone -o mountpoint=/ -o canmount=noauto $POOL_NAME/os/nuOS/$NUOS_VER@base $POOL_NAME/sys/rescue
zfs clone $POOL_NAME/os/nuOS/$NUOS_VER/etc@base $POOL_NAME/sys/rescue/etc
zfs clone $POOL_NAME/os/nuOS/$NUOS_VER/var@base $POOL_NAME/sys/rescue/var
zfs clone $POOL_NAME/os/nuOS/$NUOS_VER/var/db@base $POOL_NAME/sys/rescue/var/db
zfs create -o mountpoint=none -o canmount=off -o logbias=throughput -o sync=disabled $POOL_NAME/entropy
zfs create -o mountpoint=/var/db/entropy $POOL_NAME/entropy/rescue

mkdir $POOL_MNT/boot/etc
mv -n $POOL_MNT/etc/login.conf.db $POOL_MNT/boot/etc/
ln -s ../boot/etc/login.conf.db $POOL_MNT/etc/login.conf.db
zfs unmount $POOL_NAME/sys/rescue/etc
ln -s ../boot/etc/login.conf.db $POOL_MNT/etc/login.conf.db
zfs mount $POOL_NAME/sys/rescue/etc


require_tmp tempdir
if [ -n "${INJECT_CACHE-}" ]; then
	[ ! -f $POOL_MNT/boot/zfs/zpool.cache ]
	cp "$INJECT_CACHE" $POOL_MNT/boot/zfs/zpool.cache
	[ -f $tempdir/zpool.cache ] && rm $tempdir/zpool.cache
else
	mv -n $tempdir/zpool.cache $POOL_MNT/boot/zfs/
fi
rmdir $tempdir

zfs snapshot -r $POOL_NAME/sys/rescue@sys

# TODO: The '-o sync=always' here is about avoiding crashes due to memory pressure race conditions and not at all about making the writes durable. It may be safe to remove it after much further testing and confirmation that FreeBSD has fixed any such races. Using it causes swapping to be far slower than normal. This is a safe though not very viable swap scenario especially when used with hard disks. An L2ARC on high-end SSD helps a lot but the ultimate goal should certainly be to return to the default syncing behavior once crashes can deterministically be shown to be always avoided. For now plan to swap a little as possible, which should almost certainly already be your plan, anyway. 
# TODO: '-o primarycache=none -o secondarycache=none' is a super-safe mode if we are planning to go beta any time soon. Forget what I said about L2ARC, it needs to be tested further that swapping into the pool via L2ARC doesn't race at all. Metadata in primary memory should also be further investigated. We should instead be using '-o primarycache=metadata' when deemed safe.
zfs create -o mountpoint=none -o canmount=off -o compression=off -o primarycache=none -o secondarycache=none -o sync=always -o org.freebsd:swap=on $POOL_NAME/swap
#zfs create -o mountpoint=none -o canmount=off -o primarycache=metadata -o org.freebsd:swap=on $POOL_NAME/swap # TODO: Testing ideal case

if [ "$SWAP_SIZE" != 0 ]; then
	zfs create -b 4K -V $SWAP_SIZE $POOL_NAME/swap/host
	zfs snapshot $POOL_NAME/swap/host@blank
fi

cat >> $POOL_MNT/etc/rc.conf.local <<'EOF'
zfs_enable="NO"
EOF

cat >> $POOL_MNT/etc/fstab <<EOF
$POOL_NAME/sys/rescue/var /var zfs rw 0 0
$POOL_NAME/sys/rescue/var/db /var/db zfs rw 0 0
EOF

cat > $POOL_MNT/boot/loader.conf.local <<EOF
vfs.root.mountfrom="zfs:$POOL_NAME/sys/rescue"
EOF

zfs set canmount=noauto $POOL_NAME/entropy/rescue
zfs unmount $POOL_NAME/entropy/rescue
zfs set canmount=noauto $POOL_NAME/sys/rescue/etc
zfs set canmount=noauto $POOL_NAME/sys/rescue/var
zfs set canmount=noauto $POOL_NAME/sys/rescue/var/db
zfs unmount $POOL_NAME/sys/rescue
zfs set mountpoint=legacy $POOL_NAME/sys/rescue/var
zfs set mountpoint=legacy $POOL_NAME/sys/rescue/var/db
zfs snapshot -r $POOL_NAME/sys/rescue@boot

host_ds=$POOL_NAME/sys/host

zfs clone -o mountpoint=/ -o canmount=noauto $POOL_NAME/sys/rescue@sys $host_ds
zfs clone $POOL_NAME/sys/rescue/etc@sys $host_ds/etc
zfs clone $POOL_NAME/sys/rescue/var@sys $host_ds/var
zfs clone $POOL_NAME/sys/rescue/var/db@sys $host_ds/var/db
zfs create -o mountpoint=/var/db/entropy $POOL_NAME/entropy/host

cat > $POOL_MNT/boot/loader.conf.local <<EOF
vfs.root.mountfrom="zfs:$host_ds"
EOF

cat >> $POOL_MNT/etc/rc.conf.local <<EOF
hostname="$NEW_HOST"
EOF

cat >> $POOL_MNT/etc/nuos.conf <<EOF
POOL_BOOT_NAME=$POOL_NAME
EOF

sed -i '' -e "s/\.my\.domain\$/.`echo $NEW_HOST | sed -e 's/^[^\.]*\.//'` $NEW_HOST `echo $NEW_HOST | sed -e 's/\..*//'`/" $POOL_MNT/etc/hosts

(umask 77 && dd if=/dev/random of=$POOL_MNT/var/db/entropy/seed count=1 bs=4k)

zfs snapshot -r $host_ds@boot
zpool set bootfs=$host_ds $POOL_NAME

home_ds=$POOL_NAME/home

zfs create -o mountpoint=/home $home_ds

admin_install -z $POOL_MNT

sister enable_svc -C $POOL_MNT sshd
sister enable_svc -C $POOL_MNT jail2
#sister enable_svc -C $POOL_MNT dbus avahi_daemon netatalk

export NEW_HOST
sister nu_jail -C $POOL_MNT -p $POOL_NAME -t clone -w -j base-lab -o $BASEOS_TYPE/$BASEOS_VER -s bare -i 127.0.0.2 -a '' -u '' -b '' -q
sister nu_jail -C $POOL_MNT -p $POOL_NAME -t clone -w -j nuos-lab -s blank -i 127.0.0.3 -a '' -u '' -b '' -q
sister nu_jail -C $POOL_MNT -p $POOL_NAME -t clone -w -j lab -i 127.0.0.4 -a '' -u '' -b '' -q

zfs snapshot -r $host_ds@genesis
zfs snapshot -r $home_ds@genesis

if [ -z "${must_build-}" -a -n "${OPT_DEBUG-}" ]; then
	bpl=`mktemp -t $(basename "$0").$$`
	pl=`mktemp -t $(basename "$0").$$`
	report=`mktemp -t $(basename "$0").$$.zpool_report`
	zfs get -H -t all -o name,property,value -r mountpoint,canmount $POOL_BOOT_NAME | sed -e "s|^$POOL_BOOT_NAME|_pool|" >| $bpl
	zfs get -H -t all -o name,property,value -r mountpoint,canmount $POOL_NAME | sed -e "s|^$POOL_NAME|_pool|;s|/$POOL_NAME\$|/|;s|/$POOL_NAME||" >| $pl
	diff $bpl $pl >| $report && rm $report || echo 'WARNING DEBUG: installer reported differences in zpool layout' >&2
	rm $bpl $pl
fi


echo "Initialization of $NEW_HOST running nuOS/$NUOS_VER over $BASEOS_TYPE-$BASEOS_VER onto pool $POOL_NAME is complete."
