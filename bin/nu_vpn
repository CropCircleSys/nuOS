#!/bin/sh
set -e; set -u; set -C

# nuOS 0.0.9.3b0.1 - bin/nu_vpn - LICENSE: MOZ_PUB
#
# Copyright (c) 2008-2015 Chad Jacob Milios and Crop Circle Systems, Inc.
# All rights reserved.
#
# This Source Code Form is subject to the terms of the Mozilla Public License, v2.0.
# If a copy of the MPL was not distributed alongside this file, you can obtain one at
# http://mozilla.org/MPL/2.0/ . This software project is not affiliated with the Mozilla
# Foundation.
#
# Official updates and community support available at https://nuos.org .
# Other licensing options and professional services available at https://ccsys.com .

NUOS_VER=0.0.9.3b0.1

while getopts a:b:c:C:h:i:m:n:p:qv OPT; do case $OPT in
	a) CERT_AUTH=$OPTARG;;
	b) KEY_BITS=$OPTARG;;
	c) CIPHER=$OPTARG;;
	C) CHROOTDIR=$OPTARG;;
	h) HOST_NAME=$OPTARG;;
	i) IDENTIFIER=$OPTARG;;
	m) PRIVATE_MASK=$OPTARG;;
	n) PRIVATE_NET=$OPTARG;;
	p) POOL_NAME=$OPTARG;;
	q) OPT_QUICK=y;;
	v) OPT_VERBOSE=y;;
esac; done; shift $(($OPTIND-1))
[ $# = 0 ]

[ -z "${CHROOTDIR-}" ] || exit 43 # CHROOTDIR is unsupported, though we want to some day so most of the code is still written with support

. "$(dirname "$(realpath "$0")")/../lib/nu_system.sh"
. "$(dirname "$(realpath "$0")")/../lib/nu_common.sh"

nuos_init
nuos_ssl_init

: ${PRIVATE_NET:=172.31.0.0}
case $PRIVATE_NET in
	*/*)
		mask_bits=${PRIVATE_NET##*/}
		PRIVATE_MASK=0x`echo "obase=16; 2^32 - 2^(32-$mask_bits)" | bc | tr A-F a-f`
		PRIVATE_NET=${PRIVATE_NET%/*}
esac

: ${HOST_NAME:=$HOST}
: ${CERT_AUTH:=`$SSL_CMD x509 -noout -issuer -nameopt sep_multiline -in "${CHROOTDIR-}/etc/ssl/certs/$HOST_NAME.internal.crt" | sed -Ee '/^[[:blank:]]*CN=/!d;s/^[[:blank:]]*CN=//'`}
: ${KEY_BITS:=`$SSL_CMD x509 -noout -text -nameopt sep_multiline -certopt no_version,no_serial,no_signame,no_validity,no_subject,no_issuer,no_sigdump,no_aux,no_extensions -in "${CHROOTDIR-}/etc/ssl/certs/$HOST_NAME.internal.crt" | sed -Ee '/^[[:blank:]]*Public-Key: \(([[:digit:]]+) bit\)$/!d;s//\1/'`}
echo 'cert authority  -a CERT_AUTH      ' $CERT_AUTH
echo 'key bits        -b KEY_BITS       ' $KEY_BITS
echo 'stream cipher   -c CIPHER         ' ${CIPHER:=AES-$(($KEY_BITS/16))-CFB}
echo 'host name       -h HOST_NAME      ' $HOST_NAME
echo 'identifier      -i IDENTIFIER     ' ${IDENTIFIER-}
echo 'private netmask -m PRIVATE_MASK   ' ${PRIVATE_MASK:=0xffff0000}
echo 'private net     -n PRIVATE_NET    ' $PRIVATE_NET
echo 'pool name       -p POOL_NAME      ' ${POOL_NAME:=$POOL_BOOT_NAME}
echo

maybe_pause
maybe_yell

case $PRIVATE_MASK in
	0x*)
		PRIVATE_MASK=$(($PRIVATE_MASK / 0x1000000)).$(($PRIVATE_MASK % 0x1000000 / 0x10000)).$(($PRIVATE_MASK % 0x10000 / 0x100)).$(($PRIVATE_MASK % 0x100))
esac

if [ ! -d "${CHROOTDIR-}/usr/local/etc/openvpn" ]; then
	mkdir "${CHROOTDIR-}/usr/local/etc/openvpn"
	(umask 77 && mkdir "${CHROOTDIR-}/usr/local/etc/openvpn/private")
	if zfs list $POOL_NAME-pvt > /dev/null 2>&1; then # this check may need to be refined in order to support CHROOTDIR
		chflags schg "${CHROOTDIR-}/usr/local/etc/openvpn/private"
		zfs create -o mountpoint=/usr/local/etc/openvpn/private $POOL_NAME-pvt/sys/host/vpn-ssl
		chmod go-rx "${CHROOTDIR-}/usr/local/etc/openvpn/private"
	fi
fi

cp "${CHROOTDIR-}/etc/ssl/certs/$CERT_AUTH.internal.crt" "${CHROOTDIR-}/usr/local/etc/openvpn/${IDENTIFIER:+${IDENTIFIER}_}ca.crt"
cp "${CHROOTDIR-}/etc/ssl/certs/$HOST_NAME.internal.crt" "${CHROOTDIR-}/usr/local/etc/openvpn/${IDENTIFIER:+${IDENTIFIER}_}server.crt"
cp "${CHROOTDIR-}/etc/ssl/private/$HOST_NAME.key" "${CHROOTDIR-}/usr/local/etc/openvpn/private/${IDENTIFIER:+${IDENTIFIER}_}server.key"
openvpn --genkey --secret "${CHROOTDIR-}/usr/local/etc/openvpn/private/${IDENTIFIER:+${IDENTIFIER}_}ta.key"
$SSL_CMD dhparam -out "${CHROOTDIR-}/usr/local/etc/openvpn/${IDENTIFIER:+${IDENTIFIER}_}dh$KEY_BITS.pem" $KEY_BITS

cat > "${CHROOTDIR-}/usr/local/etc/openvpn/openvpn${IDENTIFIER:+_$IDENTIFIER}.conf" <<EOF
dev tun
topology subnet
server $PRIVATE_NET $PRIVATE_MASK
ca ${IDENTIFIER:+${IDENTIFIER}_}ca.crt
cert ${IDENTIFIER:+${IDENTIFIER}_}server.crt
key private/${IDENTIFIER:+${IDENTIFIER}_}server.key
dh ${IDENTIFIER:+${IDENTIFIER}_}dh$KEY_BITS.pem
tls-auth private/${IDENTIFIER:+${IDENTIFIER}_}ta.key 0
cipher $CIPHER
comp-lzo
user nobody
group nobody
persist-key
persist-tun
status ${IDENTIFIER:+${IDENTIFIER}_}openvpn-status.log
ifconfig-pool-persist ${IDENTIFIER:+${IDENTIFIER}_}ipp.txt
keepalive 15 90
EOF

if [ ! -e "${CHROOTDIR-}/usr/local/etc/rc.d/openvpn${IDENTIFIER:+_$IDENTIFIER}" ]; then
	ln -s "${CHROOTDIR-}/usr/local/etc/rc.d/openvpn" "${CHROOTDIR-}/usr/local/etc/rc.d/openvpn${IDENTIFIER:+_$IDENTIFIER}"
fi

sister enable_svc ${CHROOTDIR:+-C "$CHROOTDIR"} openvpn${IDENTIFIER:+_$IDENTIFIER}

echo "Configured vpn service."
