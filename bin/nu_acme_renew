#!/bin/sh
set -e; set -u; set -C

# nuOS 0.0.11.1a1 - bin/nu_acme_renew - LICENSE: MOZ_PUB
#
# Copyright (c) 2008-2017 Chad Jacob Milios and Crop Circle Systems, Inc.
# All rights reserved.
#
# This Source Code Form is subject to the terms of the Mozilla Public License, v2.0.
# If a copy of the MPL was not distributed alongside this file, you can obtain one at
# https://www.mozilla.org/MPL/2.0 . This software project is not affiliated with the
# Mozilla Foundation.
#
# Official updates and community support available at https://nuos.org .
# Other licensing options and professional services available at https://ccsys.com .

NUOS_VER=0.0.11.1a1
export PATH=/sbin:/bin:/usr/sbin:/usr/bin:/usr/local/sbin:/usr/local/bin

while getopts fiv OPT; do case $OPT in
	f) OPT_FORCE=y;;
	i) OPT_INSTALL_ONLY=y;;
	v) OPT_VERBOSE=y;;
esac; done; shift $(($OPTIND-1))

. "$(dirname "$(realpath "$0")")/../lib/nu_system.sh"
. "$(dirname "$(realpath "$0")")/../lib/nu_common.sh"

[ $# -ge 1 ] || set -- `x=/ca.cer; cd && cd .acme.sh && ls *$x 2> /dev/null | sed -e "s|$x\$||"`

nuos_init -q
nuos_ssl_init

maybe_yell

SSL_CERTS=/etc/ssl/certs

for d in $@; do
	if [ -z "${OPT_INSTALL_ONLY-}" ]; then
		hosts=$($SSL_CMD x509 -in $SSL_CERTS/$d.crt -noout -text | sed -nEe '/^[[:blank:]]*X509v3 Subject Alternative Name:[[:blank:]]*$/{s///;N;s/^[[:space:]]*//;s/, / /;s/\<DNS://g;p;}')
		[ -n "$hosts" ] || hosts=$($SSL_CMD x509 -in $SSL_CERTS/$d.crt -noout -subject -nameopt sep_multiline | sed -ne '/^    CN=/s///p')
		for a in $hosts; do
			dom_args="${dom_args:+$dom_args }-d $a"
		done
	fi
	require_tmp acme_out
	[ -n "${OPT_INSTALL_ONLY-}" ]
	if [ -n "${OPT_INSTALL_ONLY-}" ] || acme.sh --renew $dom_args ${OPT_FORCE:+--force} >| "$acme_out"; then
		if [ -z "${OPT_INSTALL_ONLY-}" ]; then
			cat "$acme_out"
			cat /root/.acme.sh/$d/$d.cer \
				>| $SSL_CERTS/$d.crt
			cat /root/.acme.sh/$d/ca.cer \
				>| $SSL_CERTS/$d.ca.crt
		fi
		for x in crt ca.crt full.crt; do
			for l in `ls $SSL_CERTS.installed/localhost/$d.$x/* 2> /dev/null`; do
				cat $SSL_CERTS/$d.${x#full.} >| "$l"
				if [ full.crt = $x ] && [ -f $SSL_CERTS/$d.ca.crt ]; then
					cat $SSL_CERTS/$d.ca.crt >> "$l"
				fi
			done
		done
	fi
	retire_tmp acme_out
done
