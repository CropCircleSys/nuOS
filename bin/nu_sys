#!/bin/sh
set -e; set -u; set -C

# nuOS 0.0.11.2a1 - bin/nu_sys
#
# Copyright (c) 2008-2018 Chad Jacob Milios and Crop Circle Systems.
# All rights reserved.
#
# This Source Code Form is subject to the terms of the Simplified BSD License.
# If a copy of the Simplified BSD License was not distributed alongside this file, you can
# obtain one at https://www.freebsd.org/copyright/freebsd-license.html . This software
# project is not affiliated with the FreeBSD Project.
#
# Official updates and community support available at https://nuos.org .
# Professional services available at https://ccsys.com .

NUOS_VER=0.0.11.2a1

. "$(dirname "$(realpath "$0")")/../lib/nu_system.sh"

while getopts a:b:c:Dh:kK:l:p:Pqs:u:v OPT; do case $OPT in
	a) ADMIN_ACCT=$OPTARG;;
	b) BD_ACCT=$OPTARG;;
	c) PKG_COLLECTION=$OPTARG;;
	D)	if [ -n "${OPT_DEBUG-}" ]; then
			COPY_PORTS=y
			COPY_DEV_PKGS=y
			COPY_SRC=y
			COPY_SVN=y
		fi
		OPT_DEBUG=y;;
	h) NEW_HOST=$OPTARG;;
	k) OPT_INSTALL_ADMIN_KEYS=y;;
	K) push ALSO_INSTALL_KEYS $OPTARG;;
	l) LOCAL_SCRIPT=$OPTARG;;
	p) POOL_NAME=$OPTARG;;
	P) OPT_DONT_PRESERVE_DIST_SNAP=y;;
	q) OPT_QUICK=y;;
	s) SWAP_SIZE=$OPTARG;;
	u) USER_ACCT=$OPTARG;;
	v) OPT_VERBOSE=y;;
esac; done; shift $(($OPTIND-1))
[ $# = 0 ]

. "$(dirname "$(realpath "$0")")/../lib/nu_common.sh"
. "$(dirname "$(realpath "$0")")/../lib/nu_admin.sh"
. "$(dirname "$(realpath "$0")")/../lib/nu_make.sh"
. "$(dirname "$(realpath "$0")")/../lib/nu_ports.sh"
. "$(dirname "$(realpath "$0")")/../lib/nu_collection.sh"
. "$(dirname "$(realpath "$0")")/../lib/nu_install.sh"

baseos_init
nuos_init
make_vars_init
collection_vars_init
install_vars_init
admin_init

maybe_pause
maybe_yell


# 	sister nu_backup os/nuOS/$NUOS_VER/$TRGT_MACH@$PKG_COLLECTION | sister nu_restore -t $POOL_NAME
# 	zfs set mountpoint=none $POOL_NAME/os
# 	zfs set canmount=off $POOL_NAME/os
# 	zfs set mountpoint=none $POOL_NAME/os/$BASEOS_TYPE
# 	zfs set canmount=off $POOL_NAME/os/$BASEOS_TYPE
# 	zfs set mountpoint=none $POOL_NAME/os/$BASEOS_TYPE/$BASEOS_VER
# 	zfs set canmount=off $POOL_NAME/os/$BASEOS_TYPE/$BASEOS_VER
# 	zfs set mountpoint=none $POOL_NAME/os/nuOS
# 	zfs set canmount=off $POOL_NAME/os/nuOS
# 	zfs set mountpoint=none $POOL_NAME/os/nuOS/$NUOS_VER
# 	zfs set canmount=off $POOL_NAME/os/nuOS/$NUOS_VER
# 	zfs set canmount=noauto $POOL_NAME/os/nuOS/$NUOS_VER/$TRGT_MACH
# 	zfs set mountpoint=/ $POOL_NAME/os/nuOS/$NUOS_VER/$TRGT_MACH
# 	zfs mount $POOL_NAME/os/nuOS/$NUOS_VER/$TRGT_MACH
# 	zfs mount $POOL_NAME/os/nuOS/$NUOS_VER/$TRGT_MACH/var
# 	zfs mount $POOL_NAME/os/nuOS/$NUOS_VER/$TRGT_MACH/var/db
# 	zfs mount $POOL_NAME/os/nuOS/$NUOS_VER/$TRGT_MACH/etc
# 	zfs set canmount=noauto $POOL_NAME/os/nuOS/$NUOS_VER/$TRGT_MACH/etc/local
# 	zfs set mountpoint=/usr/local/etc $POOL_NAME/os/nuOS/$NUOS_VER/$TRGT_MACH/etc/local
# 	zfs mount $POOL_NAME/os/nuOS/$NUOS_VER/$TRGT_MACH/etc/local

pool_mnt=`zpool get -H -o value altroot $POOL_NAME`
[ -n "$pool_mnt" -a x- != "x$pool_mnt" ]

sys_ds=$POOL_NAME/sys
factories_ds=$sys_ds/factory
nuos_factory_ds=$sys_ds/factory/nuOS-$NUOS_VER-$TRGT_MACH
use_factory_ds=$nuos_factory_ds/`zfs get -H -p -o value org.nuos:active_revision $nuos_factory_ds`

host_ds=$sys_ds/$NEW_HOST

zfs create -p -o mountpoint=none -o canmount=off $host_ds

new_host_rev=0
while
	new_host_ds=$host_ds/v$new_host_rev
	zfs list $new_host_ds
do
	new_host_rev=$(($new_host_rev + 1))
done

zfs clone -o mountpoint=/ $use_factory_ds@pool_registered $new_host_ds
zfs clone $use_factory_ds/etc@pool_registered $new_host_ds/etc
zfs clone -o mountpoint=/usr/local/etc $use_factory_ds/etc/local@pool_registered $new_host_ds/etc/local
zfs clone $use_factory_ds/var@pool_registered $new_host_ds/var
zfs clone $use_factory_ds/var/db@pool_registered $new_host_ds/var/db

cat >> $pool_mnt/etc/rc.conf.local <<EOF
hostname="$NEW_HOST"
EOF

sed -i '' -e "s/\.my\.domain\$/.`echo $NEW_HOST | sed -e 's/^[^\.]*\.//'` $NEW_HOST `echo $NEW_HOST | sed -e 's/\..*//'`/" $pool_mnt/etc/hosts

cat >> $pool_mnt/etc/nuos/backup <<EOF
sys/$NEW_HOST/(org.nuos:active_revision)/etc
sys/$NEW_HOST/(org.nuos:active_revision)/var
EOF

export NEW_HOST
# sister nu_jail ${OPT_VERBOSE:+-v} -C $pool_mnt -p $POOL_NAME -t clone -w -j base-lab -o $BASEOS_TYPE/$BASEOS_VER/$TRGT_MACH -s pkg_ready -i 127.0.0.2 -a '' -u '' -b '' -q
# sister nu_jail ${OPT_VERBOSE:+-v} -C $pool_mnt -p $POOL_NAME -t clone -w -j nuos-lab -s blank -i 127.0.0.3 -a '' -u '' -b '' -q
# sister nu_jail ${OPT_VERBOSE:+-v} -C $pool_mnt -p $POOL_NAME -t clone -w -j lab -i 127.0.0.4 -a '' -u '' -b '' -q

zpool set bootfs=$new_host_ds $POOL_NAME
zfs snapshot -r $new_host_ds@boot_single_user

zfs create -o mountpoint=/home $POOL_NAME/home || home_existed=y

# admin_install -z $pool_mnt

if [ -n "${LOCAL_SCRIPT-}" ]; then
	POOL=$POOL_NAME
	TRGT=$pool_mnt
	NAME=${NEW_HOST%%.*}
	if [ -d "${LOCAL_SCRIPT-}" ]; then
		script_files=`rcorder "$LOCAL_SCRIPT"/*.sh`
		for script_file in "$script_files"; do
			. "$script_file"
		done
	elif [ -f "${LOCAL_SCRIPT-}" ]; then
		. "$LOCAL_SCRIPT"
	fi
fi

zfs snapshot -r $new_host_ds@sys_birth
[ -n "${home_existed-}" ] || zfs snapshot -r $POOL_NAME/home@pool_birth

if [ -z "${must_build-}" -a -n "${OPT_DEBUG-}" ]; then
	require_tmp bpl
	require_tmp pl
	require_tmp -l zpool_report report
	zfs get -H -t all -o name,property,value -r mountpoint,canmount $POOL_BOOT_NAME | sed -e "s|^$POOL_BOOT_NAME|_pool|" >| "$bpl"
	zfs get -H -t all -o name,property,value -r mountpoint,canmount $POOL_NAME | sed -e "s|^$POOL_NAME|_pool|;s|/$POOL_NAME\$|/|;s|/$POOL_NAME||" >| "$pl"
	diff "$bpl" "$pl" >| "$report" && rm "$report" || echo 'WARNING DEBUG: installer reported differences in zpool layout' >&2
	rm "$bpl" "$pl"
fi


echo "Initialization of $NEW_HOST running nuOS/$NUOS_VER over $BASEOS_TYPE-$BASEOS_VER onto pool $POOL_NAME is complete."
