#!/bin/sh
set -e; set -u; set -C

# nuOS 0.0.11.2a1 - bin/nu_pkg_build_cluster
#
# Copyright (c) 2008-2018 Chad Jacob Milios and Crop Circle Systems.
# All rights reserved.
#
# This Source Code Form is subject to the terms of the Simplified BSD License.
# If a copy of the Simplified BSD License was not distributed alongside this file, you can
# obtain one at https://www.freebsd.org/copyright/freebsd-license.html . This software
# project is not affiliated with the FreeBSD Project.
#
# Official updates and community support available at https://nuos.org .
# Professional services available at https://ccsys.com .

NUOS_VER=0.0.11.2a1

while getopts d:vw: OPT; do case $OPT in
	d) PKG_DBDIR=$OPTARG;;
	v) OPT_VERBOSE=y;;
esac; done; shift $(($OPTIND-1))
[ $# = 0 ]

. "$(dirname "$(realpath "$0")")/../lib/nu_system.sh"
. "$(dirname "$(realpath "$0")")/../lib/nu_common.sh"

maybe_yell

: ${PKG_DBDIR:=/var/db/nuos/pkg}

require_tmp -d data_graph

(
	cd "${CHROOTDIR-}$PKG_DBDIR"
	tar -cf - *_*/dependencies *_*/slaves | tar -xf - -C "$data_graph"
	cd "$data_graph"
	for p in *; do 
		if [ -e $p/slaves -a ! -e $p/dependencies ]; then
			mkdir $p/dependencies
			#echo $p
			#cat $p/slaves
			cp $p/slaves $p/dependencies/all
		fi
	done
)

dfs () {
	echo ${2-} > "$gray/$1"
	for n in `cat "$data_graph/$1/dependencies/all" 2>/dev/null | tr / _`; do
		if [ -f "$black/$n" ]; then
			continue
		fi
		if [ -f "$gray/$n" ]; then
			echo ${n%%_*}/${n#*_}
			cyc_len=1
			culprit=$n
			return 0
		elif dfs $n $1; then
			if [ -z "${found-}" -o $cyc_len = 2 ]; then
				if [ $1 = $culprit ]; then
					found=y
				fi
				if [ $cyc_len = 2 -o $1 != $culprit ]; then
					echo ${1%%_*}/${1#*_}
				fi
				incr cyc_len
			fi
			return 0
		fi
	done
	rm "$gray/$1"
	touch "$black/$1"
	return 1
}

require_tmp -d gray
require_tmp -d black
cd "$data_graph"
for white in `ls -d *_*/dependencies | sed -e 's:/dependencies$::'`; do
	if dfs $white; then
		ex=1
		break
	fi
done
retire_tmp gray
retire_tmp black
retire_tmp data_graph
exit ${ex-0}
