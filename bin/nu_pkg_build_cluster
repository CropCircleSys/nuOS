#!/bin/sh
set -e; set -u; set -C

# nuOS 0.0.11.1a1 - bin/nu_pkg_build_cluster - LICENSE: MOZ_PUB
#
# Copyright (c) 2008-2017 Chad Jacob Milios and Crop Circle Systems, Inc.
# All rights reserved.
#
# This Source Code Form is subject to the terms of the Mozilla Public License, v2.0.
# If a copy of the MPL was not distributed alongside this file, you can obtain one at
# https://www.mozilla.org/MPL/2.0 . This software project is not affiliated with the
# Mozilla Foundation.
#
# Official updates and community support available at https://nuos.org .
# Other licensing options and professional services available at https://ccsys.com .

NUOS_VER=0.0.11.1a1

while getopts C:d:vw: OPT; do case $OPT in
	C) CHROOTDIR=$OPTARG;;
	d) PKG_DBDIR=$OPTARG;;
	v) OPT_VERBOSE=y;;
	w) WORKERS=$OPTARG;;
esac; done; shift $(($OPTIND-1))
[ $# = 0 ]

[ -z "${CHROOTDIR-}" ] || exit 43 # CHROOTDIR is unsupported, though we want to some day
. "$(dirname "$(realpath "$0")")/../lib/nu_system.sh"
. "$(dirname "$(realpath "$0")")/../lib/nu_common.sh"

maybe_yell

: ${WORKERS:=3}
: ${PKG_DBDIR:=/var/db/nuos/pkg}

require_tmp -d data_graph
require_tmp -d workers
require_tmp -d logs

while incr i 0 $(($WORKERS-1)); do
	mkdir "$workers/$i:localhost"
done

(cd "${CHROOTDIR-}$PKG_DBDIR" && tar -cf - */dependencies */dependants | tar -xf - -C "$data_graph")

getwork () {
	local _retvar=$1 _port= _idle=
	[ -n "`cd "$data_graph" && find . -depth 1 -name '*_*' | head -n 1`" ] || return 1
	while [ -z "$_port" ]; do
		_port=`cd "$data_graph" && find . -name dependencies -and -empty 2> /dev/null | sed -Ee 's%./([^_]+)_(.*)/dependencies%\1/\2%' | head -n 1`
		if [ -z "$_port" ]; then
			if [ -n "`find "$workers" -depth 2 -type d`" ]; then
				_idle=
			else
				if ! incr _idle 0 3; then
					echo "Starved for work. See errors in $logs." >&2
					ls -1 "$logs"/*.err >&2
					exit 1
				fi
			fi
			sleep 0.2
		fi
	done
	setvar $_retvar $_port
}

while getwork port; do
	port_=`echo $port | tr / _`
	worker=
	while [ -z "$worker" ]; do
		worker=`find "$workers" -depth 1 -empty | head -n 1`
		[ -n "$worker" ] || sleep 0.2
	done
	mv "$data_graph/$port_" "$worker/"
	(
		sister nu_install_pkg -R $port > "$worker/$port_/out" 2>&1 &
		workpid=$!
		echo $workpid > "$worker/$port_/pid"
		err=0;
		wait $workpid || err=$?
		if [ $err = 0 ]; then
			mv "$worker/$port_/out" "$logs/$port_.out"
			for dependant in `cat "$worker/$port_/dependants/all" 2> /dev/null`; do
				dependant_=`echo $dependant | tr / _`
				lockf -kn "$data_graph/$dependant_/dependencies" sh -c "sed -i '' -e \\\\%^$port\\$%d \"$data_graph/$dependant_/dependencies/\"*; find \"$data_graph/$dependant_/dependencies\" -depth 1 -empty -delete"
			done
		else
			mv "$worker/$port_/out" "$logs/$port_.err"
		fi
		rm -r "$worker/$port_"
		cat -l <<EOF
`basename "$worker"`	$port
EOF
	) &
done
wait

errors=`ls $logs/*.err 2> /dev/null | wc -l | xargs`
echo
echo Built packages described in $PKG_DBDIR with $errors errors.
if [ $errors -gt 0 ]; then
	ls -1 "$logs"/*.err >&2
fi

retire_tmp workers
retire_tmp data_graph
#retire_tmp logs

[ $errors = 0 ]
