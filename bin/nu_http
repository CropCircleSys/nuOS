#!/bin/sh
set -e; set -u; set -C

# nuOS 0.0.11.4a0 - bin/nu_http
#
# Copyright (c) 2008-2020 Chad Jacob Milios and Crop Circle Systems.
# All rights reserved.
#
# This Source Code Form is subject to the terms of the Simplified BSD License.
# If a copy of the Simplified BSD License was not distributed alongside this file, you can
# obtain one at https://www.freebsd.org/copyright/freebsd-license.html . This software
# project is not affiliated with the FreeBSD Project.
#
# Official updates and community support available at https://nuos.org .
# Professional services available at https://ccsys.com .

NUOS_VER=0.0.11.4a0

. "$(dirname "$(realpath "$0")")/../lib/nu_system.sh"

while getopts c:C:Io:sv OPT; do case $OPT in
	c) SSL_SESSION_CACHE_KB=$OPTARG;;
	C) CHROOTDIR=$OPTARG;;
	I) incr OPT_HIDE_SERVER_INFO 1;;
	o) SSL_STAPLING_CACHE_KB=$OPTARG;;
	s) OPT_SSL=y;;
	v) OPT_VERBOSE=y;;
esac; done; shift $(($OPTIND-1))
[ $# = 0 ]

if [ -n "${OPT_HIDE_SERVER_INFO-}" ]; then
	case $OPT_HIDE_SERVER_INFO in
		1) server_tokens=OS;;
		2) server_tokens=Min;;
		3) server_tokens=Minor;;
		4) server_tokens=Major;;
		5) server_tokens=Prod;;
		*) exit 85;;
	esac
fi

. "$(dirname "$(realpath "$0")")/../lib/nu_common.sh"

baseos_init
nuos_init

echo -n 'ssl             -s OPT_SSL         ' && [ -n "${OPT_SSL-}" ] && echo set || echo null
if [ -n "${OPT_SSL-}" ]; then
	echo -n 'old browsers       OPT_OBSOLETE    ' && [ -n "${OPT_OBSOLETE-}" ] && echo set || echo null
fi
if [ -n "${OPT_SSL-}" -a -n "${OPT_OBSOLETE-}" ]; then
	cat <<EOF
    * ** ** ** ** ** ** ** ** ** ** ** ** ** ** ** ** ** ** ** ** ** ** ** ** *
    ** ** ** ** ** ** ** ** **
     ** ** ** ** ** ** ** ** * WARNING: You have enabled SSL protocols with
    * ** ** ** ** ** ** ** **           known security vulnerabilities.
     ** ** ** ** ** ** ** ** *
    * ** ** ** ** ** ** ** ** ** ** ** ** ** ** ** ** ** ** ** ** ** ** ** ** *
EOF
elif [ -n "${OPT_SSL-}" -a -z "${OPT_OBSOLETE-}" ]; then
	cat <<EOF
    ---------------------------------------------------------------------------
    ---  NOTICE: Modern secure SSL/TLS is incompatible with [very] old browsers.
    ---------------------------------------------------------------------------
EOF
fi
echo

maybe_yell

[ -n "${OPT_SSL-}" -o -z "${OPT_OBSOLETE-}" ]

service=apache24

[ ! -e "${CHROOTDIR-}/etc/rc.conf.d/$service" ] || [ `wc -l "${CHROOTDIR-}/etc/rc.conf.d/$service" | xargs | cut -w -f 1` = 1 ]

export LC_CTYPE=C

sed -i '' -Ee '/^[[:blank:]]*<VirtualHost[[:>:]]/,/^[[:blank:]]*<\/VirtualHost[[:>:]]/s/^/#/' "${CHROOTDIR-}/usr/local/etc/$service/extra/httpd-vhosts.conf"
cat >> "${CHROOTDIR-}/usr/local/etc/$service/extra/httpd-vhosts.conf" <<EOF
<VirtualHost *:80>
	DocumentRoot "/usr/local/www/$service/data"
</VirtualHost>
EOF

sed -i '' -Ee '
	s/^([[:blank:]]*)# ?([[:blank:]]*)(LoadModule[[:>:]].*[[:<:]]mod_(http2|proxy|proxy_http|proxy_http2|proxy_wstunnel|proxy_balancer|rewrite|slotmem_shm|deflate|cgid?).so)$/\1\2\3/
	s/^([[:blank:]]*)# ?([[:blank:]]*)(Include[[:>:]].*[[:<:]]httpd-(mpm|vhosts|default).conf)$/\1\2\3/
	s/^([[:blank:]]*)#? ?([[:blank:]]*)(ServerName)[[:blank:]]+[^[:blank:]]+[[:blank:]]*$/\1\2\3 localhost/
	/^[[:blank:]]*Include[[:blank:]]+.*\/Includes\/\*\.conf[[:>:]]/i\
TraceEnable off\

' "${CHROOTDIR-}/usr/local/etc/$service/httpd.conf"

if [ -n "${OPT_HIDE_SERVER_INFO-}" ]; then
	sed -i '' -Ee "s/^#?(ServerTokens[[:blank:]]*).*\$/\1$server_tokens/" "${CHROOTDIR-}/usr/local/etc/$service/extra/httpd-default.conf"
fi

if [ -n "${OPT_SSL-}" ]; then
	mkdir "${CHROOTDIR-}/usr/local/etc/$service/ssl"
	(umask 77 && mkdir "${CHROOTDIR-}/usr/local/etc/$service/ssl/private")
	if ! canhas "${CHROOTDIR-}" && zfs list $POOL_BOOT_NAME/private > /dev/null 2>&1; then
		chflags schg "${CHROOTDIR-}/usr/local/etc/$service/ssl/private"
		zfs create -o mountpoint=none -o canmount=off $POOL_BOOT_NAME-pvt/svc 2>/dev/null || true
		zfs create -o mountpoint=none -o canmount=off $POOL_BOOT_NAME-pvt/svc/$HOST 2>/dev/null || true
		zfs create -o mountpoint=/usr/local/etc/$service/ssl/private $POOL_BOOT_NAME-pvt/svc/$HOST/http-ssl
		chmod go-rx "${CHROOTDIR-}/usr/local/etc/$service/ssl/private"
	fi
	sed -i '' -Ee "
		/^[[:blank:]]*<VirtualHost[[:>:]]/,/^[[:blank:]]*<\/VirtualHost[[:>:]]/d
		/^[[:blank:]]*SSLSessionCache[[:>:]]/s/\([[:digit:]]+\)/($((${SSL_SESSION_CACHE_KB:-2048}*1024)))/
		/^[[:blank:]]*#?[[:blank:]]*(SSLUseStapling)[[:>:]].*\$/s//\1 On/
		/^[[:blank:]]*#?[[:blank:]]*SSLStaplingCache[[:>:]]/{
			s/^([[:blank:]]*)#([[:blank:]]*)/\1\2/
			s/\([[:digit:]]+\)/($((${SSL_STAPLING_CACHE_KB:-512}*1024)))/
		}
	" "${CHROOTDIR-}/usr/local/etc/$service/extra/httpd-ssl.conf"
	if [ -z "${OPT_OBSOLETE-}" ]; then
		sed -i '' -Ee '
			s/^[[:blank:]]*#?[[:blank:]]*((SSLCipherSuite|SSLProxyCipherSuite)[[:>:]].*)$/# \1/
			s/^[[:blank:]]*#?[[:blank:]]*(SSLProtocol|SSLProxyProtocol)(.*)$/\1\2 -TLSv1 -TLSv1.1/
		' "${CHROOTDIR-}/usr/local/etc/$service/extra/httpd-ssl.conf"
		if grep -q -E '^# SSLCipherSuite[[:blank:]]+HIGH:MEDIUM:!SSLv3:!kRSA' "${CHROOTDIR-}/usr/local/etc/$service/extra/httpd-ssl.conf" && grep -q -E '^# SSLProxyCipherSuite[[:blank:]]+HIGH:MEDIUM:!SSLv3:!kRSA' "${CHROOTDIR-}/usr/local/etc/$service/extra/httpd-ssl.conf"; then
			sed -i '' -Ee '
				s/^# ((SSLCipherSuite|SSLProxyCipherSuite)[[:blank:]]+HIGH:MEDIUM:!SSLv3:!kRSA.*)$/\1/
			' "${CHROOTDIR-}/usr/local/etc/$service/extra/httpd-ssl.conf"
		else
			echo WARNING: Apache recommended CipherSuite seems to have changed since nuOS update. Continuing...
			ln=`grep -n -E '^# (SSLCipherSuite|SSLProxyCipherSuite)\b' "${CHROOTDIR-}/usr/local/etc/$service/extra/httpd-ssl.conf" | cut -d : -f 1 | tail -n 1`
			[ "$ln" -ge 1 ]
			sed -i '' -Ee "
				${ln}a\\
SSLCipherSuite HIGH:MEDIUM:!SSLv3:!kRSA\\
SSLProxyCipherSuite HIGH:MEDIUM:!SSLv3:!kRSA
			" "${CHROOTDIR-}/usr/local/etc/$service/extra/httpd-ssl.conf"
		fi
	fi
	sed -i '' -Ee 's/^#(Include[[:>:]].*[[:<:]]httpd-ssl.conf)$/\1/;s/^#(LoadModule[[:>:]].*[[:<:]]mod_(ssl|socache_shmcb).so)$/\1/' "${CHROOTDIR-}/usr/local/etc/$service/httpd.conf"
	sister nu_ssl ${CHROOTDIR:+-C "$CHROOTDIR"} -s -S -b 1024 -e 36500 -n XX -p Void -h dummy.void
	mv "${CHROOTDIR-}/etc/ssl/private/dummy.void.key" "${CHROOTDIR-}/usr/local/etc/$service/ssl/private/"
	mv "${CHROOTDIR-}/etc/ssl/certs/dummy.void.internal.crt" "${CHROOTDIR-}/usr/local/etc/$service/ssl/dummy.void.crt"
	cat >> "${CHROOTDIR-}/usr/local/etc/$service/extra/httpd-vhosts.conf" <<EOF
<VirtualHost *:443>
	DocumentRoot "/usr/local/www/$service/data"
	SSLEngine on
	SSLCertificateFile "/usr/local/etc/$service/ssl/dummy.void.crt"
	SSLCertificateKeyFile "/usr/local/etc/$service/ssl/private/dummy.void.key"
</VirtualHost>
EOF
fi

sister enable_svc ${CHROOTDIR:+-C "$CHROOTDIR"} $service
echo $service'_http_accept_enable="YES"' >> "${CHROOTDIR-}/etc/rc.conf.d/$service"

echo "Configured http service."
