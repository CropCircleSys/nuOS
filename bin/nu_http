#!/bin/sh
set -e; set -u; set -C

# nuOS 0.0.9.3b0.1 - bin/nu_http - LICENSE: MOZ_PUB
#
# Copyright (c) 2008-2015 Chad Jacob Milios and Crop Circle Systems, Inc.
# All rights reserved.
#
# This Source Code Form is subject to the terms of the Mozilla Public License, v2.0.
# If a copy of the MPL was not distributed alongside this file, you can obtain one at
# http://mozilla.org/MPL/2.0/ . This software project is not affiliated with the Mozilla
# Foundation.
#
# Official updates and community support available at https://nuos.org .
# Other licensing options and professional services available at https://ccsys.com .

NUOS_VER=0.0.9.3b0.1

while getopts c:C:o:sv OPT; do case $OPT in
	c) SSL_SESSION_CACHE_KB=$OPTARG;;
	C) CHROOTDIR=$OPTARG;;
	o) SSL_STAPLING_CACHE_KB=$OPTARG;;
	s) OPT_SSL=y;;
	v) OPT_VERBOSE=y;;
esac; done; shift $(($OPTIND-1))
[ $# = 0 ]

[ -z "${CHROOTDIR-}" ] || exit 43 # CHROOTDIR is unsupported, though we want to some day so most of the code is still written with support

. "$(dirname "$(realpath "$0")")/../lib/nu_system.sh"
. "$(dirname "$(realpath "$0")")/../lib/nu_common.sh"

nuos_init

echo -n 'ssl             -s OPT_SSL         ' && [ -n "${OPT_SSL-}" ] && echo set || echo null
[ -n "${OPT_SSL-}" ] && echo -n 'old browsers       OPT_OBSOLETE    ' && [ -n "${OPT_OBSOLETE-}" ] && echo set || echo null
if [ -n "${OPT_SSL-}" -a -n "${OPT_OBSOLETE-}" ]; then
	cat <<EOF
    * ** ** ** ** ** ** ** ** ** ** ** ** ** ** ** ** ** ** ** ** ** ** ** ** *
    ** ** ** ** ** ** ** ** **
     ** ** ** ** ** ** ** ** * WARNING: You have enabled SSL protocols with
    * ** ** ** ** ** ** ** **           known security vulnerabilities.
     ** ** ** ** ** ** ** ** *
    * ** ** ** ** ** ** ** ** ** ** ** ** ** ** ** ** ** ** ** ** ** ** ** ** *
EOF
elif [ -n "${OPT_SSL-}" -a -z "${OPT_OBSOLETE-}" ]; then
	cat <<EOF
    ---------------------------------------------------------------------------
    ---  NOTICE: Modern secure SSL/TLS is incompatible with [very] old browsers.
    ---------------------------------------------------------------------------
EOF
fi
echo

maybe_yell

[ -n "${OPT_SSL-}" -o -z "${OPT_OBSOLETE-}" ]

service=apache24

[ ! -e "${CHROOTDIR-}/etc/rc.conf.d/$service" ] || [ `wc -l "${CHROOTDIR-}/etc/rc.conf.d/$service" | xargs | cut -w -f 1` = 1 ]

export LC_CTYPE=C

sed -i '' -Ee '/^<VirtualHost[[:>:]]/,/^<\/VirtualHost[[:>:]]/s/^/#/' "${CHROOTDIR-}/usr/local/etc/$service/extra/httpd-vhosts.conf"
cat >> "${CHROOTDIR-}/usr/local/etc/$service/extra/httpd-vhosts.conf" <<EOF
<VirtualHost *:80>
	DocumentRoot "/usr/local/www/$service/data"
</VirtualHost>
<VirtualHost *:443>
	DocumentRoot "/usr/local/www/$service/data"
</VirtualHost>
EOF
sed -i '' -Ee '
	s/^#(LoadModule[[:>:]].*[[:<:]]mod_(proxy|proxy_http|proxy_wstunnel|rewrite).so)$/\1/
	s/^#(Include[[:>:]].*[[:<:]]httpd-(mpm|vhosts|default).conf)$/\1/
	/^#ServerName /a\
ServerName localhost
' "${CHROOTDIR-}/usr/local/etc/$service/httpd.conf"

if [ -n "${OPT_SSL-}" ]; then
	mkdir "${CHROOTDIR-}/usr/local/etc/$service/ssl"
	(umask 77 && mkdir "${CHROOTDIR-}/usr/local/etc/$service/ssl/private")
	if zfs list $POOL_BOOT_NAME/private > /dev/null 2>&1; then # this check will need to be refined if ever we support CHROOTDIR
		chflags schg "${CHROOTDIR-}/usr/local/etc/$service/ssl/private"
		zfs create -o mountpoint=none -o canmount=off $POOL_BOOT_NAME-pvt/svc 2>/dev/null || true
		zfs create -o mountpoint=none -o canmount=off $POOL_BOOT_NAME-pvt/svc/$HOST 2>/dev/null || true
		zfs create -o mountpoint=/usr/local/etc/$service/ssl/private $POOL_BOOT_NAME-pvt/svc/$HOST/http-ssl
		chmod go-rx "${CHROOTDIR-}/usr/local/etc/$service/ssl/private"
	fi
	sed -i '' -Ee "
		/^<VirtualHost[[:>:]]/,/^<\/VirtualHost[[:>:]]/s/^/#/
		/^SSLSessionCache[[:>:]]/s/\([[:digit:]]+\)/($((${SSL_SESSION_CACHE_KB:-2048}*1024)))/
		/^#SSLUseStapling[[:>:]]/s/^#//
		/^#SSLStaplingCache[[:>:]]/{
			s/^#//
			s/\([[:digit:]]+\)/($((${SSL_STAPLING_CACHE_KB:-512}*1024)))/
		}
	" "${CHROOTDIR-}/usr/local/etc/$service/extra/httpd-ssl.conf"
	if [ -z "${OPT_OBSOLETE-}" ]; then
		sed -i '' -Ee '/^(SSLCipherSuite)[[:>:]].*$/s//\1 EECDH+ECDSA+AESGCM:EECDH+aRSA+AESGCM:EECDH+ECDSA+SHA384:EECDH+ECDSA+SHA256:EECDH+aRSA+SHA384:EECDH+aRSA+SHA256:EECDH:EDH+aRSA:!aNULL:!eNULL:!LOW:!3DES:!MD5:!EXP:!PSK:!SRP:!DSS:!RC4/' "${CHROOTDIR-}/usr/local/etc/$service/extra/httpd-ssl.conf"
	fi
	sed -i '' -Ee 's/^#(Include[[:>:]].*[[:<:]]httpd-ssl.conf)$/\1/;s/^#(LoadModule[[:>:]].*[[:<:]]mod_(ssl|socache_shmcb).so)$/\1/' "${CHROOTDIR-}/usr/local/etc/$service/httpd.conf"
fi

sister enable_svc ${CHROOTDIR:+-C "$CHROOTDIR"} $service
echo $service'_http_accept_enable="YES"' >> "${CHROOTDIR-}/etc/rc.conf.d/$service"

echo "Configured http service."
